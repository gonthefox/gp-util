* get abstract
#+BEGIN_SRC emacs-lisp :results raw
(load-file "./gp-util.el")
(require 'gp-util)
(require 'dom)
(setq patent-number "US8683200B2")
(setq section-list (dom-by-tag (gp-get-patent-as-dom patent-number) 'section))
(cl-reduce (lambda (s a) (if (string= (dom-attr s 'itemprop) "abstract") s a)) section-list :initial-value nil)
#+END_SRC

#+RESULTS:
(section ((itemprop . abstract)) (h2 nil Abstract) (div ((itemprop . content)) (abstract ((mxw-id . PA131853274) (lang . EN) (load-source . patent-office)) (div ((num . p-0001) (class . abstract)) A content server is provided for storing and distributing digital content to a client. The content server includes a content database configured to electronically store the digital content and a DRM packager for adding a universal DRM layer to the digital content stored at the content database. The universal DRM layer is able to access digital content in conformance with a plurality of different DRM implementations, the digital content being in conformance with one of the plurality of different DRM implementations. The universal DRM layer can access the content by a variety of means, such as with a universal key, for example, that can decrypt content from many different DRM technologies. In this way the client only needs to have a DRM controller that is compatible with this higher-level, universal DRM implementation rather than with the individual, underlying DRM implementations.))))

* get abstract
#+BEGIN_SRC emacs-lisp
(load-file "./gp-util.el")
(require 'gp-util)
(require 'dom)
(setq patent-number "US8683200B2")
(gp-get-abstract patent-number)
#+END_SRC

#+RESULTS:
| section | ((itemprop . abstract)) | (h2 nil Abstract) | (div ((itemprop . content)) (abstract ((mxw-id . PA131853274) (lang . EN) (load-source . patent-office)) (div ((num . p-0001) (class . abstract)) A content server is provided for storing and distributing digital content to a client. The content server includes a content database configured to electronically store the digital content and a DRM packager for adding a universal DRM layer to the digital content stored at the content database. The universal DRM layer is able to access digital content in conformance with a plurality of different DRM implementations, the digital content being in conformance with one of the plurality of different DRM implementations. The universal DRM layer can access the content by a variety of means, such as with a universal key, for example, that can decrypt content from many different DRM technologies. In this way the client only needs to have a DRM controller that is compatible with this higher-level, universal DRM implementation rather than with the individual, underlying DRM implementations.))) |

* get metadata
#+BEGIN_SRC emacs-lisp
(load-file "./gp-util.el")
(require 'gp-util)
(require 'dom)
(setq patent-number "US8683200B2")
(dom-by-tag (gp-get-metadata patent-number) 'span)
#+END_SRC

#+RESULTS:
| span | ((itemprop . applicationNumber))         | US12/948,059                                                    |
| span | ((itemprop . priorityDate))              | 2003-03-28                                                      |
| span | ((itemprop . filingDate))                | 2010-11-17                                                      |
| span | ((itemprop . title))                     | Method and apparatus for implementing digital rights management |
| span | ((itemprop . ifiStatus))                 | Expired - Fee Related                                           |
| span | ((itemprop . representativePublication)) | US8683200B2                                                     |
| span | ((itemprop . primaryLanguage))           | en                                                              |

* get claims
#+BEGIN_SRC emacs-lisp :results text
(load-file "./gp-util.el")
(require 'gp-util)
(require 'dom)
(setq patent-number "US8683200B2")
(dom-by-tag (gp-get-claims patent-number) 'div)
#+END_SRC

#+RESULTS:
| div | ((itemprop . content)) | (div ((mxw-id . PCLM59642781) (lang . EN) (load-source . patent-office) (class . claims)) (claim-statement nil The invention claimed is:) (div ((class . claim)) (div ((id . CLM-00001) (num . 00001) (class . claim)) (div ((class . claim-text)) 1. A content server for storing and distributing digital content, comprising: |

* get claim
#+BEGIN_SRC emacs-lisp
(load-file "./gp-util.el")
(require 'gp-util)
(require 'dom)
(setq patent-number "US8683200B2")

;(gp-get-claim patent-number 9)
(gp-get-claim-as-text patent-number 20)
;(setq clist '(div ((class . claim-text)) 9. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the DRM packager further distributes a rights package to the user.))
;(listp (nth 6 clist))
#+END_SRC

* get family info
#+BEGIN_SRC emacs-lisp
(load-file "./gp-util.el")
(require 'gp-util)
(require 'dom)
(setq patent-number "US8683200B2")
(gp-get-family patent-number)
#+end_src

#+RESULTS:
| section | ((itemprop . family)) | (h1 nil Family) | (h2 nil ID=32989586) | (h2 nil Family Applications (2)) | (table nil (thead nil (tr nil (th nil Application Number) (th nil Title) (th nil Priority Date) (th nil Filing Date))) (tbody nil (tr ((itemprop . applications)) (td nil (span ((itemprop . applicationNumber)) US10/402,035) (span ((itemprop . ifiStatus)) Active) (span ((itemprop . ifiExpiration)) 2029-02-13) (a ((href . /patent/US7845014B2/en)) (span ((itemprop . representativePublication)) US7845014B2) |

* get application
#+BEGIN_SRC emacs-lisp
(load-file "./gp-util.el")
(require 'gp-util)
(require 'dom)
(setq patent-number "US8683200B2")
(gp-get-application patent-number)
#+END_SRC

#+RESULTS:
| section | ((itemprop . application)) | (section ((itemprop . metadata)) (span ((itemprop . applicationNumber)) US12/948,059) (span ((itemprop . priorityDate)) 2003-03-28) (span ((itemprop . filingDate)) 2010-11-17) (span ((itemprop . title)) Method and apparatus for implementing digital rights management |

* get application number
#+BEGIN_SRC emacs-lisp
(load-file "./gp-util.el")
(require 'gp-util)
(require 'dom)
(setq patent-number "US8683200B2")
(gp-get-application-number patent-number)
#+END_SRC

#+RESULTS:
| span | ((itemprop . applicationNumber)) | US12/948,059 |

* get title
#+BEGIN_SRC emacs-lisp
(load-file "./gp-util.el")
(require 'gp-util)
(require 'dom)
(setq patent-number "US8683200B2")
(dom-text (gp-get-priority-date patent-number))
#+END_SRC

#+RESULTS:
: 2003-03-28

* get description
#+BEGIN_SRC emacs-lisp :results raw
(load-file "./gp-util.el")
(require 'gp-util)
(require 'dom)
(setq patent-number "US8683200B2")
(gp-get-description patent-number)
#+END_SRC

level 0: (section ((itemprop . description)) 
level 1: (h2 nil Description) 
         (div ((itemprop . content)) 
level 2: (div ((mxw-id . PDES67640106) (lang . EN) (load-source . patent-office) (class . description)) 
         (heading nil STATEMENT OF RELATED APPLICATION) 
(p ((num . p-0002)) This application is a continuation of U.S. patent application Ser. No. 10/402,035, filed Mar. 28, 2003, now matured to a patent, U.S. Pat. 7,845,014, which is incorporated herein by reference in its entirety.) 
(heading nil FIELD OF THE INVENTION) 
(p ((num . p-0003)) The present invention relates generally to the management of digital information, and more particularly to a method and apparatus for providing and accessing digital information protected by different digital rights management technologies.) 
(heading nil BACKGROUND OF THE INVENTION) 
(p ((num . p-0004)) Computers store, share and manipulate digital information that can be replicated accurately and shared widely among many computer systems. Computers share or receive digital information in a variety contexts. For example, digital information can be stored, exchanged and delivered by way of magnetic (floppy diskette) or optical (CD-ROM) storage devices. Computers operating in network environments pass digital information back and forth freely and often in great volume. In fact, more and more content is being delivered in digital form, and more and more digital content is being delivered online over private and public networks, such as Intranets, the Internet and cable TV networks. Wide-spread replication and distribution of digital products supports new methods of digital product manufacturing and distribution. That is, digitally stored items can be copied and distributed electronically outside the traditional methods of product manufacture and distribution.) (p ((num . p-0005)) For a user or client, a digital format allows more sophisticated content, while online delivery improves timeliness and convenience. For a publisher, digital content also reduces delivery costs. Unfortunately, these worthwhile attributes are often outweighed in the minds of publishers by the corresponding disadvantage that online information delivery makes it relatively easy to obtain pristine digital content and to pirate the content at the expense and harm of the publisher. Accordingly, the digital nature of these works, makes it imperative that they be secured against unauthorized copying. With no generation loss and the relative ease with which digital files may be copied and distributed, even a single unprotected copy could spawn a multitude of pirated versions, significantly reducing the demand for authorized copies.) (p ((num . p-0006)) If digital content such as digitized audio tracks, literary works in digital form, or digital images and videos could be securely distributed to consumers, then an entirely new market for these works could be created. For example, rather than purchasing music albums from a local retail outlet, consumers could download the digital data across the Internet and then write this data to their local CD-R, thus creating their own compact disks. Similarly, rather than renting a video tape from a local video retailer, consumers could download the digital version and then play it locally on their computer screens or televisions.) (p ((num . p-0007)) To address this need, Digital Rights Management (DRM) systems have recently been developed to restrict the use of digital files in order to protect the interests of content providers. DRM technologies can control file access (number of views, length of views), as well as the ability to alter, share, copy, print, and save files. These technologies may be contained within the operating system, program software, or in the actual hardware of a device. DRM systems may also be referred to as “Content Management Systems” (CMS), “Content/Copy Protection for Removable Media” (CPRM) or sometimes as “technological measures.”) (p ((num . p-0008)) DRM systems generally use two approaches to securing digital content. The first is containment, in which the content is encrypted so that it can only be accessed by authorized users. The second is marking, in which a watermark or other tag is placed on the digital content as a signal to a user-device that the content is copy-protected. DRM technologies may use one or both of these approaches. In addition to security technology, DRM systems often include technology for packaging, distributing and rendering (e.g., displaying, playing and printing) the digital content.) (p ((num . p-0009)) While DRM standardization is now being pursued by a number of organizations such as the openEBook Forum, the MPEG group, the Internet engineering Task Force and the World Wide Web Consortium, currently there is not a core DRM technology that is widely deployed. Rather, it has been necessary to build end-to-end DRM solutions around component technologies, which make the components not very interoperable. For example, it is generally not possible to take Vendor A's encryption-based packaging technology and integrate it with Vendor B's rendering application.) (heading nil SUMMARY OF THE INVENTION) (p ((num . p-0010)) In accordance with the present invention, a method and apparatus is provided for providing digital content to a client. The method begins by receiving a request from the client to receive digital content. The client is authorized to receive the digital content and the DRM implementation employed by the client is determined. The digital content is then provided to the client in conformance with the DRM implementation employed by the client.) (p ((num . p-0011)) In accordance with one aspect of the invention, the step of providing the digital content includes the step of transmitting the digital content to the client over a computer network. The computer network may be the Internet, for example.) (p ((num . p-0012)) In accordance with another aspect of the invention, the step of providing the digital content includes the step of providing a physical medium to the client in which the digital content is embodied.) (p ((num . p-0013)) In accordance with another aspect of the invention, the digital content is obtained from a content provider prior to transmitting the digital content to the client.) (p ((num . p-0014)) In accordance with another aspect of the invention, a rights package is bundled with the digital content prior to transmitting the digital content to the client.) (p ((num . p-0015)) In accordance with another aspect of the invention, the rights package includes a decryption key for decrypting the digital content.) (p ((num . p-0016)) In accordance with another aspect of the invention, the digital content includes text-based information, audio information, visual information, or any combination thereof.) (p ((num . p-0017)) In accordance with another aspect of the invention, the digital content is transmitted as streaming media.) (p ((num . p-0018)) In accordance with another aspect of the invention, a method is provided for receiving digital content from a content distributor. The method begins by transmitting a request to the content distributor to receive digital content. In addition, information is transmitted that reflects a DRM implementation in which the digital content is to be received. The digital content is received in conformance with the DRM implementation in which the digital content is to be received.) (p ((num . p-0019)) In accordance with another aspect of the invention, a DRM architecture is provided for storing and distributing digital content. The DRM architecture includes a content database for electronically storing the digital content and a DRM packager for distributing to a client the digital content in conformance with a plurality of different DRM implementations.) (p ((num . p-0020)) In accordance with another aspect of the invention, a method is provided for providing digital content to a client. The method begins by receiving a request from the client to receive digital content. The client is authorized to receive the digital content. A universal DRM layer is added to the digital content. The universal DRM layer is able to access digital content in conformance with a plurality of different DRM implementations. The digital content is in conformance with one of the plurality of different DRM implementations. The digital content is provided to the client in conformance with the universal DRM layer.) (description-of-drawings nil (heading nil BRIEF DESCRIPTION OF THE DRAWINGS) (p ((num . p-0021)) (figref ((idrefs . DRAWINGS)) FIG. 1)  shows an overview of a generalized DRM architecture that encompasses a content provider and a client.) (p ((num . p-0022)) (figref ((idrefs . DRAWINGS)) FIG. 2)  is a flow-chart illustrating an exemplary sequence of steps employed by the content provider for providing digital content to a client in accordance with the present invention.)) (heading nil DETAILED DESCRIPTION) (p ((num . p-0023)) The present inventor has recognized that the problems arising from the incompatibility of different DRM technologies can be alleviated by making digital content available in multiple DRM formats. Upon a user's request, the digital content can be provided to the user in conformance with the particular DRM format employed by the user. Accordingly, compatibility between the DRM technology employed by the content provider and the DRM technology employed by the user or client becomes less of a problem, provided that the user's DRM technology matches one of the formats used by the content provider.) (p ((num . p-0024)) At the outset, a high level view of a generalized DRM architecture will be presented to facilitate an understanding of the present invention. Most vendor-specific DRM implementations can be described in terms of this generalized architecture. As shown in  (figref ((idrefs . DRAWINGS)) FIG. 1) , the major components of the DRM architecture are the content server  (b nil 110) , the license server  (b nil 130) , and the client  (b nil 120) .) (p ((num . p-0025)) Turning first to the content server  (b nil 110) , it includes a content repository  (b nil 112)  in which the actual content to be licensed is stored. The content server  (b nil 110)  also includes a product database  (b nil 114)  that stores information describing the content to be licensed, such as marketing information, catalogues, and prices. Finally, a DRM packager  (b nil 116)  is incorporated into the content server  (b nil 110)  to prepare the content for distribution. In particular, the DRM packager  (b nil 116)  may encrypt the content, possibly make it tamper-proof, and possibly add a watermark. The DRM packager  (b nil 116)  also creates a description of the rights that the content provider is willing to allow the user to exercise with respect to the content. In the simplest case the DRM packager  (b nil 116)  bundles the rights with the content and sends it to the user. In more flexible arrangements the content package is kept separate from the rights, with the rights being embodied in a separate license. This arrangement is particularly useful in connection with streaming media, which cannot be bundled with the content package. The DRM packager  (b nil 116)  may also create encryption keys to authenticate the user and decrypt the content. While in  (figref ((idrefs . DRAWINGS)) FIG. 1)  the DRM packager  (b nil 116)  is associated with the content server  (b nil 110) , it should be noted that in general the content may be prepared at any point along the distribution chain. For example, DRM packager  (b nil 116)  may be associated with a clearinghouse that prepares content for a wide variety of different content providers.) (p ((num . p-0026)) Assuming for generality that the content package and the license are distinct, the DRM packager  (b nil 116)  sends the rights specification and encryption keys that it has created to the license server  (b nil 130)  where, in  (figref ((idrefs . DRAWINGS)) FIG. 1) , they are stored in a rights database  (b nil 132)  and an encryption key database  (b nil 134) , respectively. The license server  (b nil 130)  may also include an identities database  (b nil 136)  for storing the information about the users who are entitled to exercise rights with respect to the content. A license generator  (b nil 138)  is employed to create the license using the information in the rights, encryption keys, and identities databases.) (p ((num . p-0027)) The client  (b nil 120)  refers either to the user, the device, e.g., a personal computer or PDA, or both the user and device, that is requesting the content from the content server. For the purposes of digital rights management, the primary component residing in the client  (b nil 120)  is the DRM controller  (b nil 122) , which provides the identity information to, and obtains the license from, the license server. Once the license has been obtained, the DRM controller  (b nil 122)  retrieves the encryption keys from the license, decrypts the content package and releases the content to a rendering application  (b nil 124) . The rendering application  (b nil 124)  is generally software residing in the client device that is used to view, play, print or otherwise exercise the rights with respect to the content. The DRM controller  (b nil 122)  may be software that is incorporated into the rendering application, software that is independent of the rendering application, or it even may be a dedicated hardware element. In some cases the DRM controller  (b nil 122)  is embodied in a plug-in for a rendering application, which is currently the case for Adobe Acrobat Reader, for example.) (p ((num . p-0028)) One example of a sequence of steps that may be used to acquire content and exercise rights with respect to that content using the architecture depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  is as follows. Generally, the user begins the process by obtaining a content package in any of a variety of ways, such as by downloading it over the Internet or reading it from physical media such as a CD-ROM. Next, the user makes a request to exercise rights on the content package. The request may be made through the rendering application  (b nil 124)  or some other interface, which in turn instructs the DRM controller  (b nil 122)  to gather the information required by the license server to generate a license. Such information generally includes identity information pertaining to the user and client device and/or information from the content package such as a content identifier. The DRM controller  (b nil 122)  forwards the information to the license server  (b nil 130) . In the license server  (b nil 130) , the license generator  (b nil 138)  authenticates the user's identity in its identities database  (b nil 136)  and gathers rights information from the user's license request. The license server  (b nil 130)  may also initiate a financial transaction with the user or, alternatively, may ensure that such a transaction has already been completed. The license generator  (b nil 138)  creates a license using the rights information, client identity information, and the encryption keys. The license generator  (b nil 138)  forwards the license to the client, which in turn decrypts the content and forwards it to the rendering application  (b nil 124) .) (p ((num . p-0029)) The number of vendors currently providing DRM implementations that conform to the architecture depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  is so great that for purposes of brevity only a few of them will be mentioned herein. As one example, the Media Commerce Suite is a DRM implementation available from RealNetworks that is suitable for streaming media formats such as RealAudio, RealVideo, and Windows Media. In this implementation the user downloads the Media Commerce Upgrade software, which is an add-on to a streaming media application such as RealPlayer and Windows Media Player. In terms of the  (figref ((idrefs . DRAWINGS)) FIG. 1)  architecture, the Media Commerce Upgrade software serves as the DRM controller. The RealSystem License Server corresponds to license server  (b nil 130)  in  (figref ((idrefs . DRAWINGS)) FIG. 1)  and accepts purchase requests and creates licenses for users. Another DRM implementation suitable for streaming media formats is provided by Liquid Audio, Inc. Liquid Audio supports not only Windows- and Macintosh-based client devices, but also portable devices available from vendors such as Sony, Sanyo, Palm and Toshiba. Similar to RealNetworks, Liquid Audio operates with RealAudio and Windows Media. Sony Corporation provides a variety of DRM implementations such as Open MG X, for example. Open MG X includes three distinct software modules. One module adds digital rights management information to the digital content, another module distributes the digital rights management information to the client, and a third client module is provided for developing application software that is compatible with Open MG X.) (p ((num . p-0030)) While the aforementioned DRM implementations are illustrative of those available for providing music and streaming media, other DRM implementations are designed for text- and image-based content. For example, Adobe Systems provides Adobe Content Server, which provides a DRM implementation for Adobe's own text and image application, eBook Reader. Other vendors such as InterTrust provide a DRM implementation for another text and image application provided by Adobe Systems, Acrobat Reader. InterTrust supplies a plug-in for Acrobat Reader, DocBox, which serves as the DRM controller for this implementation.) (p ((num . p-0031)) While many of the previously mentioned DRM vendors provide end-to-end DRM systems for content providers, it should be noted that not all the functional elements of such a system as depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  necessarily need to be provided by the same vendor. That is, security technology such as encryption and authentication, and technology for packaging, distributing and rendering (e.g., displaying, playing and printing) may each be provided by a different vendor. Unfortunately, as previously mentioned, if different functional elements are provided by different vendors employing various proprietary DRM technologies, the client may not be able to render the digital content in a usable manner.) (p ((num . p-0032)) To overcome this limitation, in accordance with the present invention, the DRM packager  (b nil 116)  prepares the content in conformity with a number of different DRM implementations. That is, the DRM packager  (b nil 116)  can encrypt the content and format the license so that it can be decrypted by various DRM controllers  (b nil 122)  that operate in accordance with different DRM implementations. In this way the client  (b nil 120)  is not required to have the hardware or software required by the single vendor-specific DRM implementation that is used by a given content provider.) (p ((num . p-0033)) (figref ((idrefs . DRAWINGS)) FIG. 2)  is flow-chart illustrating an exemplary sequence of steps employed by the content provider for providing digital content to a client in accordance with the present invention. In step  (b nil 200) , the content server  (b nil 110)  seen in  (figref ((idrefs . DRAWINGS)) FIG. 1)  receives a request from the client  (b nil 120)  to receive digital content. Based on information received from the client  (b nil 120) , the DRM packager  (b nil 116)  in step  (b nil 210)  determines the particular DRM implementation that the client employs and forwards the appropriate content package to the client in accordance with that particular DRM implementation. In step  (b nil 220)  the DRM packager  (b nil 116)  provides to the license server  (b nil 130)  the information necessary to generate a license. In step  (b nil 230)  the license server  (b nil 130)  generates and forwards the license to the client  (b nil 120) , along with any necessary encryption keys, in the format required by the client's DRM controller  (b nil 122)  so that the content can be decrypted and made available to the rendering application  (b nil 124) .) (p ((num . p-0034)) In an alternative embodiment of the invention, instead of preparing the content in conformity with different DRM implementations, the DRM packager  (b nil 116)  may add a layer on top of the content package prepared by the individual DRM implementations. The additional layer can access the content by a variety of means, such as with a universal key, for example, that can decrypt content from many different DRM technologies. In this way the client only needs to have a DRM controller that is compatible with this higher-level, universal DRM implementation rather than with the individual, underlying DRM implementations.))))


#+BEGIN_SRC emacs-lisp
(load-file "./gp-util.el")
(require 'gp-util)
(require 'dom)
(setq patent-number "US8683200B2")
;(gp-get-description patent-number)
;(dom-tag '(h2 nil Description))
(setq test '((h2 nil Description)))
(dom-tag test)
#+END_SRC

#+RESULTS:
: h2


* get description render
#+BEGIN_SRC emacs-lisp
  (load-file "./gp-util.el")
  (require 'gp-util)
  (require 'dom)
  ;(setq patent-number "US8683200B2")
  ;(setq d-list (gp-get-description patent-number))
  d-list

  (defun render-org (lst result)
  (push 


  (cl-reduce (lambda (node  acc) 
	       (cond ((dom-by-tag node 'h2) (cons (format "** %s" (dom-text node)) acc))))

	       lst :initial-value nil )
  result
  ))

;  (dom-text '(h2 nil "description"))

  (render-org '(h2 nil "description") nil)
#+END_SRC


#+BEGIN_SRC emacs-lisp
(require 'dom)

(setq result '())

(cl-reduce (lambda (node  acc) 
(setq acc (concat "*" acc)))
'((h2 nil "Description") (h3 nil "Drawings") (h4 nil "Claims") (h5 nil "application")) :initial-value nil)
;'(("a") ("b") ("c")) :initial-value nil)

;(cond ((string= (dom-tag '(h2 nil "Description")) "h2") (dom-text '(h2 nil "Description"))))
;(dom-text '(h2 nil "Description"))
#+END_SRC

#+RESULTS:






#+BEGIN_SRC emacs-lisp :results raw
(setq lst '("a" "b" "c"))

(cl-reduce (lambda (s a) (concat s a)) lst)
#+END_SRC

#+RESULTS:
abc

* [2021-01-11 Mon]
#+BEGIN_SRC emacs-lisp :results raw
    (load-file "./gp-util.el")
    (require 'gp-util)
    (require 'dom)
    (setq patent-number "US8683200B2")
    (setq d-list (gp-get-description patent-number))
    ;;  (dom-children d-list)

    (defun render-html (dom result)
    (push (nreverse (cl-reduce (lambda (node acc) 
      (cons acc node))
      dom :initial-value nil)) 
      result)
      )

;      (render-html '(section nil "Description") nil)
(render-html '((0 1 2 3 4) (5 6 7 8 9)) nil)
#+END_SRC




#+BEGIN_SRC emacs-lisp
  (funcall 
   (lambda (node acc) 
   (cond ((symbolp (dom-tag node))
   (cons (dom-tag node) acc)))
   )
   '(section nil "Description") nil)
#+END_SRC

#+RESULTS:
| section |


#+BEGIN_SRC emacs-lisp
    (load-file "./gp-util.el")
    (require 'gp-util)
    (require 'dom)
    (setq patent-number "US8683200B2")
;    (setq d-list (nth 0 (dom-by-tag (gp-get-description patent-number) 'section))))
    (setq d-list (gp-get-description patent-number))

(setq acc nil)
(setq acc (cons (dom-tag d-list) acc))
(setq child-car (car (dom-children d-list)))
(dom-text child-car)
(setq child-cdr (cdr (dom-children d-list)))
(setq acc (cons (dom-tag child-cdr) acc))


(lambda (node acc) (
(cons (dom-tag node) acc)
(dom-children node)

#+END_SRC

#+RESULTS:
| div | section |

** (setq d-list (gp-get-description patent-number))
   #+begin_quote
   (dom-by-tag d-list 'section) とすると，これがさらにリストの中に入る．まあ当然か．
   #+end_quote
(section ((itemprop . description)) (h2 nil Description) (div ((itemprop . content)) (div ((mxw-id . PDES67640106) (lang . EN) (load-source . patent-office) (class . description)) (heading nil STATEMENT OF RELATED APPLICATION) (p ((num . p-0002)) This application is a continuation of U.S. patent application Ser. No. 10/402,035, filed Mar. 28, 2003, now matured to a patent, U.S. Pat. 7,845,014, which is incorporated herein by reference in its entirety.) (heading nil FIELD OF THE INVENTION) (p ((num . p-0003)) The present invention relates generally to the management of digital information, and more particularly to a method and apparatus for providing and accessing digital information protected by different digital rights management technologies.) (heading nil BACKGROUND OF THE INVENTION) (p ((num . p-0004)) Computers store, share and manipulate digital information that can be replicated accurately and shared widely among many computer systems. Computers share or receive digital information in a variety contexts. For example, digital information can be stored, exchanged and delivered by way of magnetic (floppy diskette) or optical (CD-ROM) storage devices. Computers operating in network environments pass digital information back and forth freely and often in great volume. In fact, more and more content is being delivered in digital form, and more and more digital content is being delivered online over private and public networks, such as Intranets, the Internet and cable TV networks. Wide-spread replication and distribution of digital products supports new methods of digital product manufacturing and distribution. That is, digitally stored items can be copied and distributed electronically outside the traditional methods of product manufacture and distribution.) (p ((num . p-0005)) For a user or client, a digital format allows more sophisticated content, while online delivery improves timeliness and convenience. For a publisher, digital content also reduces delivery costs. Unfortunately, these worthwhile attributes are often outweighed in the minds of publishers by the corresponding disadvantage that online information delivery makes it relatively easy to obtain pristine digital content and to pirate the content at the expense and harm of the publisher. Accordingly, the digital nature of these works, makes it imperative that they be secured against unauthorized copying. With no generation loss and the relative ease with which digital files may be copied and distributed, even a single unprotected copy could spawn a multitude of pirated versions, significantly reducing the demand for authorized copies.) (p ((num . p-0006)) If digital content such as digitized audio tracks, literary works in digital form, or digital images and videos could be securely distributed to consumers, then an entirely new market for these works could be created. For example, rather than purchasing music albums from a local retail outlet, consumers could download the digital data across the Internet and then write this data to their local CD-R, thus creating their own compact disks. Similarly, rather than renting a video tape from a local video retailer, consumers could download the digital version and then play it locally on their computer screens or televisions.) (p ((num . p-0007)) To address this need, Digital Rights Management (DRM) systems have recently been developed to restrict the use of digital files in order to protect the interests of content providers. DRM technologies can control file access (number of views, length of views), as well as the ability to alter, share, copy, print, and save files. These technologies may be contained within the operating system, program software, or in the actual hardware of a device. DRM systems may also be referred to as “Content Management Systems” (CMS), “Content/Copy Protection for Removable Media” (CPRM) or sometimes as “technological measures.”) (p ((num . p-0008)) DRM systems generally use two approaches to securing digital content. The first is containment, in which the content is encrypted so that it can only be accessed by authorized users. The second is marking, in which a watermark or other tag is placed on the digital content as a signal to a user-device that the content is copy-protected. DRM technologies may use one or both of these approaches. In addition to security technology, DRM systems often include technology for packaging, distributing and rendering (e.g., displaying, playing and printing) the digital content.) (p ((num . p-0009)) While DRM standardization is now being pursued by a number of organizations such as the openEBook Forum, the MPEG group, the Internet engineering Task Force and the World Wide Web Consortium, currently there is not a core DRM technology that is widely deployed. Rather, it has been necessary to build end-to-end DRM solutions around component technologies, which make the components not very interoperable. For example, it is generally not possible to take Vendor A's encryption-based packaging technology and integrate it with Vendor B's rendering application.) (heading nil SUMMARY OF THE INVENTION) (p ((num . p-0010)) In accordance with the present invention, a method and apparatus is provided for providing digital content to a client. The method begins by receiving a request from the client to receive digital content. The client is authorized to receive the digital content and the DRM implementation employed by the client is determined. The digital content is then provided to the client in conformance with the DRM implementation employed by the client.) (p ((num . p-0011)) In accordance with one aspect of the invention, the step of providing the digital content includes the step of transmitting the digital content to the client over a computer network. The computer network may be the Internet, for example.) (p ((num . p-0012)) In accordance with another aspect of the invention, the step of providing the digital content includes the step of providing a physical medium to the client in which the digital content is embodied.) (p ((num . p-0013)) In accordance with another aspect of the invention, the digital content is obtained from a content provider prior to transmitting the digital content to the client.) (p ((num . p-0014)) In accordance with another aspect of the invention, a rights package is bundled with the digital content prior to transmitting the digital content to the client.) (p ((num . p-0015)) In accordance with another aspect of the invention, the rights package includes a decryption key for decrypting the digital content.) (p ((num . p-0016)) In accordance with another aspect of the invention, the digital content includes text-based information, audio information, visual information, or any combination thereof.) (p ((num . p-0017)) In accordance with another aspect of the invention, the digital content is transmitted as streaming media.) (p ((num . p-0018)) In accordance with another aspect of the invention, a method is provided for receiving digital content from a content distributor. The method begins by transmitting a request to the content distributor to receive digital content. In addition, information is transmitted that reflects a DRM implementation in which the digital content is to be received. The digital content is received in conformance with the DRM implementation in which the digital content is to be received.) (p ((num . p-0019)) In accordance with another aspect of the invention, a DRM architecture is provided for storing and distributing digital content. The DRM architecture includes a content database for electronically storing the digital content and a DRM packager for distributing to a client the digital content in conformance with a plurality of different DRM implementations.) (p ((num . p-0020)) In accordance with another aspect of the invention, a method is provided for providing digital content to a client. The method begins by receiving a request from the client to receive digital content. The client is authorized to receive the digital content. A universal DRM layer is added to the digital content. The universal DRM layer is able to access digital content in conformance with a plurality of different DRM implementations. The digital content is in conformance with one of the plurality of different DRM implementations. The digital content is provided to the client in conformance with the universal DRM layer.) (description-of-drawings nil (heading nil BRIEF DESCRIPTION OF THE DRAWINGS) (p ((num . p-0021)) (figref ((idrefs . DRAWINGS)) FIG. 1)  shows an overview of a generalized DRM architecture that encompasses a content provider and a client.) (p ((num . p-0022)) (figref ((idrefs . DRAWINGS)) FIG. 2)  is a flow-chart illustrating an exemplary sequence of steps employed by the content provider for providing digital content to a client in accordance with the present invention.)) (heading nil DETAILED DESCRIPTION) (p ((num . p-0023)) The present inventor has recognized that the problems arising from the incompatibility of different DRM technologies can be alleviated by making digital content available in multiple DRM formats. Upon a user's request, the digital content can be provided to the user in conformance with the particular DRM format employed by the user. Accordingly, compatibility between the DRM technology employed by the content provider and the DRM technology employed by the user or client becomes less of a problem, provided that the user's DRM technology matches one of the formats used by the content provider.) (p ((num . p-0024)) At the outset, a high level view of a generalized DRM architecture will be presented to facilitate an understanding of the present invention. Most vendor-specific DRM implementations can be described in terms of this generalized architecture. As shown in  (figref ((idrefs . DRAWINGS)) FIG. 1) , the major components of the DRM architecture are the content server  (b nil 110) , the license server  (b nil 130) , and the client  (b nil 120) .) (p ((num . p-0025)) Turning first to the content server  (b nil 110) , it includes a content repository  (b nil 112)  in which the actual content to be licensed is stored. The content server  (b nil 110)  also includes a product database  (b nil 114)  that stores information describing the content to be licensed, such as marketing information, catalogues, and prices. Finally, a DRM packager  (b nil 116)  is incorporated into the content server  (b nil 110)  to prepare the content for distribution. In particular, the DRM packager  (b nil 116)  may encrypt the content, possibly make it tamper-proof, and possibly add a watermark. The DRM packager  (b nil 116)  also creates a description of the rights that the content provider is willing to allow the user to exercise with respect to the content. In the simplest case the DRM packager  (b nil 116)  bundles the rights with the content and sends it to the user. In more flexible arrangements the content package is kept separate from the rights, with the rights being embodied in a separate license. This arrangement is particularly useful in connection with streaming media, which cannot be bundled with the content package. The DRM packager  (b nil 116)  may also create encryption keys to authenticate the user and decrypt the content. While in  (figref ((idrefs . DRAWINGS)) FIG. 1)  the DRM packager  (b nil 116)  is associated with the content server  (b nil 110) , it should be noted that in general the content may be prepared at any point along the distribution chain. For example, DRM packager  (b nil 116)  may be associated with a clearinghouse that prepares content for a wide variety of different content providers.) (p ((num . p-0026)) Assuming for generality that the content package and the license are distinct, the DRM packager  (b nil 116)  sends the rights specification and encryption keys that it has created to the license server  (b nil 130)  where, in  (figref ((idrefs . DRAWINGS)) FIG. 1) , they are stored in a rights database  (b nil 132)  and an encryption key database  (b nil 134) , respectively. The license server  (b nil 130)  may also include an identities database  (b nil 136)  for storing the information about the users who are entitled to exercise rights with respect to the content. A license generator  (b nil 138)  is employed to create the license using the information in the rights, encryption keys, and identities databases.) (p ((num . p-0027)) The client  (b nil 120)  refers either to the user, the device, e.g., a personal computer or PDA, or both the user and device, that is requesting the content from the content server. For the purposes of digital rights management, the primary component residing in the client  (b nil 120)  is the DRM controller  (b nil 122) , which provides the identity information to, and obtains the license from, the license server. Once the license has been obtained, the DRM controller  (b nil 122)  retrieves the encryption keys from the license, decrypts the content package and releases the content to a rendering application  (b nil 124) . The rendering application  (b nil 124)  is generally software residing in the client device that is used to view, play, print or otherwise exercise the rights with respect to the content. The DRM controller  (b nil 122)  may be software that is incorporated into the rendering application, software that is independent of the rendering application, or it even may be a dedicated hardware element. In some cases the DRM controller  (b nil 122)  is embodied in a plug-in for a rendering application, which is currently the case for Adobe Acrobat Reader, for example.) (p ((num . p-0028)) One example of a sequence of steps that may be used to acquire content and exercise rights with respect to that content using the architecture depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  is as follows. Generally, the user begins the process by obtaining a content package in any of a variety of ways, such as by downloading it over the Internet or reading it from physical media such as a CD-ROM. Next, the user makes a request to exercise rights on the content package. The request may be made through the rendering application  (b nil 124)  or some other interface, which in turn instructs the DRM controller  (b nil 122)  to gather the information required by the license server to generate a license. Such information generally includes identity information pertaining to the user and client device and/or information from the content package such as a content identifier. The DRM controller  (b nil 122)  forwards the information to the license server  (b nil 130) . In the license server  (b nil 130) , the license generator  (b nil 138)  authenticates the user's identity in its identities database  (b nil 136)  and gathers rights information from the user's license request. The license server  (b nil 130)  may also initiate a financial transaction with the user or, alternatively, may ensure that such a transaction has already been completed. The license generator  (b nil 138)  creates a license using the rights information, client identity information, and the encryption keys. The license generator  (b nil 138)  forwards the license to the client, which in turn decrypts the content and forwards it to the rendering application  (b nil 124) .) (p ((num . p-0029)) The number of vendors currently providing DRM implementations that conform to the architecture depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  is so great that for purposes of brevity only a few of them will be mentioned herein. As one example, the Media Commerce Suite is a DRM implementation available from RealNetworks that is suitable for streaming media formats such as RealAudio, RealVideo, and Windows Media. In this implementation the user downloads the Media Commerce Upgrade software, which is an add-on to a streaming media application such as RealPlayer and Windows Media Player. In terms of the  (figref ((idrefs . DRAWINGS)) FIG. 1)  architecture, the Media Commerce Upgrade software serves as the DRM controller. The RealSystem License Server corresponds to license server  (b nil 130)  in  (figref ((idrefs . DRAWINGS)) FIG. 1)  and accepts purchase requests and creates licenses for users. Another DRM implementation suitable for streaming media formats is provided by Liquid Audio, Inc. Liquid Audio supports not only Windows- and Macintosh-based client devices, but also portable devices available from vendors such as Sony, Sanyo, Palm and Toshiba. Similar to RealNetworks, Liquid Audio operates with RealAudio and Windows Media. Sony Corporation provides a variety of DRM implementations such as Open MG X, for example. Open MG X includes three distinct software modules. One module adds digital rights management information to the digital content, another module distributes the digital rights management information to the client, and a third client module is provided for developing application software that is compatible with Open MG X.) (p ((num . p-0030)) While the aforementioned DRM implementations are illustrative of those available for providing music and streaming media, other DRM implementations are designed for text- and image-based content. For example, Adobe Systems provides Adobe Content Server, which provides a DRM implementation for Adobe's own text and image application, eBook Reader. Other vendors such as InterTrust provide a DRM implementation for another text and image application provided by Adobe Systems, Acrobat Reader. InterTrust supplies a plug-in for Acrobat Reader, DocBox, which serves as the DRM controller for this implementation.) (p ((num . p-0031)) While many of the previously mentioned DRM vendors provide end-to-end DRM systems for content providers, it should be noted that not all the functional elements of such a system as depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  necessarily need to be provided by the same vendor. That is, security technology such as encryption and authentication, and technology for packaging, distributing and rendering (e.g., displaying, playing and printing) may each be provided by a different vendor. Unfortunately, as previously mentioned, if different functional elements are provided by different vendors employing various proprietary DRM technologies, the client may not be able to render the digital content in a usable manner.) (p ((num . p-0032)) To overcome this limitation, in accordance with the present invention, the DRM packager  (b nil 116)  prepares the content in conformity with a number of different DRM implementations. That is, the DRM packager  (b nil 116)  can encrypt the content and format the license so that it can be decrypted by various DRM controllers  (b nil 122)  that operate in accordance with different DRM implementations. In this way the client  (b nil 120)  is not required to have the hardware or software required by the single vendor-specific DRM implementation that is used by a given content provider.) (p ((num . p-0033)) (figref ((idrefs . DRAWINGS)) FIG. 2)  is flow-chart illustrating an exemplary sequence of steps employed by the content provider for providing digital content to a client in accordance with the present invention. In step  (b nil 200) , the content server  (b nil 110)  seen in  (figref ((idrefs . DRAWINGS)) FIG. 1)  receives a request from the client  (b nil 120)  to receive digital content. Based on information received from the client  (b nil 120) , the DRM packager  (b nil 116)  in step  (b nil 210)  determines the particular DRM implementation that the client employs and forwards the appropriate content package to the client in accordance with that particular DRM implementation. In step  (b nil 220)  the DRM packager  (b nil 116)  provides to the license server  (b nil 130)  the information necessary to generate a license. In step  (b nil 230)  the license server  (b nil 130)  generates and forwards the license to the client  (b nil 120) , along with any necessary encryption keys, in the format required by the client's DRM controller  (b nil 122)  so that the content can be decrypted and made available to the rendering application  (b nil 124) .) (p ((num . p-0034)) In an alternative embodiment of the invention, instead of preparing the content in conformity with different DRM implementations, the DRM packager  (b nil 116)  may add a layer on top of the content package prepared by the individual DRM implementations. The additional layer can access the content by a variety of means, such as with a universal key, for example, that can decrypt content from many different DRM technologies. In this way the client only needs to have a DRM controller that is compatible with this higher-level, universal DRM implementation rather than with the individual, underlying DRM implementations.))))

** (dom-tag d-list)
: section

** (dom-children d-list)
| h2  | nil                    | Description|
| div | ((itemprop . content)) | (div ((mxw-id . PDES67640106) (lang . EN) (load-source . patent-office) (class . description)) (heading nil STATEMENT OF RELATED APPLICATION) (p ((num . p-0002)) This application is a continuation of U.S. patent application Ser. No. 10/402,035, filed Mar. 28, 2003, now matured to a patent, U.S. Pat. 7,845,014, which is incorporated herein by reference in its entirety.) (heading nil FIELD OF THE INVENTION) (p ((num . p-0003)) The present invention relates generally to the management of digital information, and more particularly to a method and apparatus for providing and accessing digital information protected by different digital rights management technologies.) (heading nil BACKGROUND OF THE INVENTION) (p ((num . p-0004)) Computers store, share and manipulate digital information that can be replicated accurately and shared widely among many computer systems. Computers share or receive digital information in a variety contexts. For example, digital information can be stored, exchanged and delivered by way of magnetic (floppy diskette) or optical (CD-ROM) storage devices. Computers operating in network environments pass digital information back and forth freely and often in great volume. In fact, more and more content is being delivered in digital form, and more and more digital content is being delivered online over private and public networks, such as Intranets, the Internet and cable TV networks. Wide-spread replication and distribution of digital products supports new methods of digital product manufacturing and distribution. That is, digitally stored items can be copied and distributed electronically outside the traditional methods of product manufacture and distribution.) (p ((num . p-0005)) For a user or client, a digital format allows more sophisticated content, while online delivery improves timeliness and convenience. For a publisher, digital content also reduces delivery costs. Unfortunately, these worthwhile attributes are often outweighed in the minds of publishers by the corresponding disadvantage that online information delivery makes it relatively easy to obtain pristine digital content and to pirate the content at the expense and harm of the publisher. Accordingly, the digital nature of these works, makes it imperative that they be secured against unauthorized copying. With no generation loss and the relative ease with which digital files may be copied and distributed, even a single unprotected copy could spawn a multitude of pirated versions, significantly reducing the demand for authorized copies.) (p ((num . p-0006)) If digital content such as digitized audio tracks, literary works in digital form, or digital images and videos could be securely distributed to consumers, then an entirely new market for these works could be created. For example, rather than purchasing music albums from a local retail outlet, consumers could download the digital data across the Internet and then write this data to their local CD-R, thus creating their own compact disks. Similarly, rather than renting a video tape from a local video retailer, consumers could download the digital version and then play it locally on their computer screens or televisions.) (p ((num . p-0007)) To address this need, Digital Rights Management (DRM) systems have recently been developed to restrict the use of digital files in order to protect the interests of content providers. DRM technologies can control file access (number of views, length of views), as well as the ability to alter, share, copy, print, and save files. These technologies may be contained within the operating system, program software, or in the actual hardware of a device. DRM systems may also be referred to as “Content Management Systems” (CMS), “Content/Copy Protection for Removable Media” (CPRM) or sometimes as “technological measures.”) (p ((num . p-0008)) DRM systems generally use two approaches to securing digital content. The first is containment, in which the content is encrypted so that it can only be accessed by authorized users. The second is marking, in which a watermark or other tag is placed on the digital content as a signal to a user-device that the content is copy-protected. DRM technologies may use one or both of these approaches. In addition to security technology, DRM systems often include technology for packaging, distributing and rendering (e.g., displaying, playing and printing) the digital content.) (p ((num . p-0009)) While DRM standardization is now being pursued by a number of organizations such as the openEBook Forum, the MPEG group, the Internet engineering Task Force and the World Wide Web Consortium, currently there is not a core DRM technology that is widely deployed. Rather, it has been necessary to build end-to-end DRM solutions around component technologies, which make the components not very interoperable. For example, it is generally not possible to take Vendor A's encryption-based packaging technology and integrate it with Vendor B's rendering application.) (heading nil SUMMARY OF THE INVENTION) (p ((num . p-0010)) In accordance with the present invention, a method and apparatus is provided for providing digital content to a client. The method begins by receiving a request from the client to receive digital content. The client is authorized to receive the digital content and the DRM implementation employed by the client is determined. The digital content is then provided to the client in conformance with the DRM implementation employed by the client.) (p ((num . p-0011)) In accordance with one aspect of the invention, the step of providing the digital content includes the step of transmitting the digital content to the client over a computer network. The computer network may be the Internet, for example.) (p ((num . p-0012)) In accordance with another aspect of the invention, the step of providing the digital content includes the step of providing a physical medium to the client in which the digital content is embodied.) (p ((num . p-0013)) In accordance with another aspect of the invention, the digital content is obtained from a content provider prior to transmitting the digital content to the client.) (p ((num . p-0014)) In accordance with another aspect of the invention, a rights package is bundled with the digital content prior to transmitting the digital content to the client.) (p ((num . p-0015)) In accordance with another aspect of the invention, the rights package includes a decryption key for decrypting the digital content.) (p ((num . p-0016)) In accordance with another aspect of the invention, the digital content includes text-based information, audio information, visual information, or any combination thereof.) (p ((num . p-0017)) In accordance with another aspect of the invention, the digital content is transmitted as streaming media.) (p ((num . p-0018)) In accordance with another aspect of the invention, a method is provided for receiving digital content from a content distributor. The method begins by transmitting a request to the content distributor to receive digital content. In addition, information is transmitted that reflects a DRM implementation in which the digital content is to be received. The digital content is received in conformance with the DRM implementation in which the digital content is to be received.) (p ((num . p-0019)) In accordance with another aspect of the invention, a DRM architecture is provided for storing and distributing digital content. The DRM architecture includes a content database for electronically storing the digital content and a DRM packager for distributing to a client the digital content in conformance with a plurality of different DRM implementations.) (p ((num . p-0020)) In accordance with another aspect of the invention, a method is provided for providing digital content to a client. The method begins by receiving a request from the client to receive digital content. The client is authorized to receive the digital content. A universal DRM layer is added to the digital content. The universal DRM layer is able to access digital content in conformance with a plurality of different DRM implementations. The digital content is in conformance with one of the plurality of different DRM implementations. The digital content is provided to the client in conformance with the universal DRM layer.) (description-of-drawings nil (heading nil BRIEF DESCRIPTION OF THE DRAWINGS) (p ((num . p-0021)) (figref ((idrefs . DRAWINGS)) FIG. 1)  shows an overview of a generalized DRM architecture that encompasses a content provider and a client.) (p ((num . p-0022)) (figref ((idrefs . DRAWINGS)) FIG. 2)  is a flow-chart illustrating an exemplary sequence of steps employed by the content provider for providing digital content to a client in accordance with the present invention.)) (heading nil DETAILED DESCRIPTION) (p ((num . p-0023)) The present inventor has recognized that the problems arising from the incompatibility of different DRM technologies can be alleviated by making digital content available in multiple DRM formats. Upon a user's request, the digital content can be provided to the user in conformance with the particular DRM format employed by the user. Accordingly, compatibility between the DRM technology employed by the content provider and the DRM technology employed by the user or client becomes less of a problem, provided that the user's DRM technology matches one of the formats used by the content provider.) (p ((num . p-0024)) At the outset, a high level view of a generalized DRM architecture will be presented to facilitate an understanding of the present invention. Most vendor-specific DRM implementations can be described in terms of this generalized architecture. As shown in  (figref ((idrefs . DRAWINGS)) FIG. 1) , the major components of the DRM architecture are the content server  (b nil 110) , the license server  (b nil 130) , and the client  (b nil 120) .) (p ((num . p-0025)) Turning first to the content server  (b nil 110) , it includes a content repository  (b nil 112)  in which the actual content to be licensed is stored. The content server  (b nil 110)  also includes a product database  (b nil 114)  that stores information describing the content to be licensed, such as marketing information, catalogues, and prices. Finally, a DRM packager  (b nil 116)  is incorporated into the content server  (b nil 110)  to prepare the content for distribution. In particular, the DRM packager  (b nil 116)  may encrypt the content, possibly make it tamper-proof, and possibly add a watermark. The DRM packager  (b nil 116)  also creates a description of the rights that the content provider is willing to allow the user to exercise with respect to the content. In the simplest case the DRM packager  (b nil 116)  bundles the rights with the content and sends it to the user. In more flexible arrangements the content package is kept separate from the rights, with the rights being embodied in a separate license. This arrangement is particularly useful in connection with streaming media, which cannot be bundled with the content package. The DRM packager  (b nil 116)  may also create encryption keys to authenticate the user and decrypt the content. While in  (figref ((idrefs . DRAWINGS)) FIG. 1)  the DRM packager  (b nil 116)  is associated with the content server  (b nil 110) , it should be noted that in general the content may be prepared at any point along the distribution chain. For example, DRM packager  (b nil 116)  may be associated with a clearinghouse that prepares content for a wide variety of different content providers.) (p ((num . p-0026)) Assuming for generality that the content package and the license are distinct, the DRM packager  (b nil 116)  sends the rights specification and encryption keys that it has created to the license server  (b nil 130)  where, in  (figref ((idrefs . DRAWINGS)) FIG. 1) , they are stored in a rights database  (b nil 132)  and an encryption key database  (b nil 134) , respectively. The license server  (b nil 130)  may also include an identities database  (b nil 136)  for storing the information about the users who are entitled to exercise rights with respect to the content. A license generator  (b nil 138)  is employed to create the license using the information in the rights, encryption keys, and identities databases.) (p ((num . p-0027)) The client  (b nil 120)  refers either to the user, the device, e.g., a personal computer or PDA, or both the user and device, that is requesting the content from the content server. For the purposes of digital rights management, the primary component residing in the client  (b nil 120)  is the DRM controller  (b nil 122) , which provides the identity information to, and obtains the license from, the license server. Once the license has been obtained, the DRM controller  (b nil 122)  retrieves the encryption keys from the license, decrypts the content package and releases the content to a rendering application  (b nil 124) . The rendering application  (b nil 124)  is generally software residing in the client device that is used to view, play, print or otherwise exercise the rights with respect to the content. The DRM controller  (b nil 122)  may be software that is incorporated into the rendering application, software that is independent of the rendering application, or it even may be a dedicated hardware element. In some cases the DRM controller  (b nil 122)  is embodied in a plug-in for a rendering application, which is currently the case for Adobe Acrobat Reader, for example.) (p ((num . p-0028)) One example of a sequence of steps that may be used to acquire content and exercise rights with respect to that content using the architecture depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  is as follows. Generally, the user begins the process by obtaining a content package in any of a variety of ways, such as by downloading it over the Internet or reading it from physical media such as a CD-ROM. Next, the user makes a request to exercise rights on the content package. The request may be made through the rendering application  (b nil 124)  or some other interface, which in turn instructs the DRM controller  (b nil 122)  to gather the information required by the license server to generate a license. Such information generally includes identity information pertaining to the user and client device and/or information from the content package such as a content identifier. The DRM controller  (b nil 122)  forwards the information to the license server  (b nil 130) . In the license server  (b nil 130) , the license generator  (b nil 138)  authenticates the user's identity in its identities database  (b nil 136)  and gathers rights information from the user's license request. The license server  (b nil 130)  may also initiate a financial transaction with the user or, alternatively, may ensure that such a transaction has already been completed. The license generator  (b nil 138)  creates a license using the rights information, client identity information, and the encryption keys. The license generator  (b nil 138)  forwards the license to the client, which in turn decrypts the content and forwards it to the rendering application  (b nil 124) .) (p ((num . p-0029)) The number of vendors currently providing DRM implementations that conform to the architecture depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  is so great that for purposes of brevity only a few of them will be mentioned herein. As one example, the Media Commerce Suite is a DRM implementation available from RealNetworks that is suitable for streaming media formats such as RealAudio, RealVideo, and Windows Media. In this implementation the user downloads the Media Commerce Upgrade software, which is an add-on to a streaming media application such as RealPlayer and Windows Media Player. In terms of the  (figref ((idrefs . DRAWINGS)) FIG. 1)  architecture, the Media Commerce Upgrade software serves as the DRM controller. The RealSystem License Server corresponds to license server  (b nil 130)  in  (figref ((idrefs . DRAWINGS)) FIG. 1)  and accepts purchase requests and creates licenses for users. Another DRM implementation suitable for streaming media formats is provided by Liquid Audio, Inc. Liquid Audio supports not only Windows- and Macintosh-based client devices, but also portable devices available from vendors such as Sony, Sanyo, Palm and Toshiba. Similar to RealNetworks, Liquid Audio operates with RealAudio and Windows Media. Sony Corporation provides a variety of DRM implementations such as Open MG X, for example. Open MG X includes three distinct software modules. One module adds digital rights management information to the digital content, another module distributes the digital rights management information to the client, and a third client module is provided for developing application software that is compatible with Open MG X.) (p ((num . p-0030)) While the aforementioned DRM implementations are illustrative of those available for providing music and streaming media, other DRM implementations are designed for text- and image-based content. For example, Adobe Systems provides Adobe Content Server, which provides a DRM implementation for Adobe's own text and image application, eBook Reader. Other vendors such as InterTrust provide a DRM implementation for another text and image application provided by Adobe Systems, Acrobat Reader. InterTrust supplies a plug-in for Acrobat Reader, DocBox, which serves as the DRM controller for this implementation.) (p ((num . p-0031)) While many of the previously mentioned DRM vendors provide end-to-end DRM systems for content providers, it should be noted that not all the functional elements of such a system as depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  necessarily need to be provided by the same vendor. That is, security technology such as encryption and authentication, and technology for packaging, distributing and rendering (e.g., displaying, playing and printing) may each be provided by a different vendor. Unfortunately, as previously mentioned, if different functional elements are provided by different vendors employing various proprietary DRM technologies, the client may not be able to render the digital content in a usable manner.) (p ((num . p-0032)) To overcome this limitation, in accordance with the present invention, the DRM packager  (b nil 116)  prepares the content in conformity with a number of different DRM implementations. That is, the DRM packager  (b nil 116)  can encrypt the content and format the license so that it can be decrypted by various DRM controllers  (b nil 122)  that operate in accordance with different DRM implementations. In this way the client  (b nil 120)  is not required to have the hardware or software required by the single vendor-specific DRM implementation that is used by a given content provider.) (p ((num . p-0033)) (figref ((idrefs . DRAWINGS)) FIG. 2)  is flow-chart illustrating an exemplary sequence of steps employed by the content provider for providing digital content to a client in accordance with the present invention. In step  (b nil 200) , the content server  (b nil 110)  seen in  (figref ((idrefs . DRAWINGS)) FIG. 1)  receives a request from the client  (b nil 120)  to receive digital content. Based on information received from the client  (b nil 120) , the DRM packager  (b nil 116)  in step  (b nil 210)  determines the particular DRM implementation that the client employs and forwards the appropriate content package to the client in accordance with that particular DRM implementation. In step  (b nil 220)  the DRM packager  (b nil 116)  provides to the license server  (b nil 130)  the information necessary to generate a license. In step  (b nil 230)  the license server  (b nil 130)  generates and forwards the license to the client  (b nil 120) , along with any necessary encryption keys, in the format required by the client's DRM controller  (b nil 122)  so that the content can be decrypted and made available to the rendering application  (b nil 124) .) (p ((num . p-0034)) In an alternative embodiment of the invention, instead of preparing the content in conformity with different DRM implementations, the DRM packager  (b nil 116)  may add a layer on top of the content package prepared by the individual DRM implementations. The additional layer can access the content by a variety of means, such as with a universal key, for example, that can decrypt content from many different DRM technologies. In this way the client only needs to have a DRM controller that is compatible with this higher-level, universal DRM implementation rather than with the individual, underlying DRM implementations.)) |























* [2021-01-14 Thu]
#+BEGIN_SRC emacs-lisp
    (load-file "./gp-util.el")
    (require 'gp-util)
    (require 'dom)
    (setq patent-number "US8683200B2")
;    (setq d-list (nth 0 (dom-by-tag (gp-get-description patent-number) 'section))))
    (setq d-list (gp-get-description patent-number))

;(cl-reduce 
;(dom-children d-list)
;(funcall (lambda (lst acc) (cons (dom) acc)) d-list nil)


;(funcall (lambda (object acc) (cond ((symbolp (dom-tag object)) (cons (symbol-name (dom-tag object)) acc)))) '(section ((itemprop . description)) (h2 nil Description)) nil)
;; cl-reduceに渡す関数の第１引数はaccumlator第２がリストのオブジェクト
;; condはデフォルトを書かないと，accが無くなってしまい，変な結果になる
(cl-reduce 
(lambda (acc object) 
(cond 
      ((atom object) (cons object acc))
;      ((symbolp (car object)) (cons object acc))
      (t acc)
)
)
;'(section (one two three) four five)
'(section ((itemprop . description)) (h2 nil Description) (h3 nil Drawings))
:initial-value nil)
;(symbol-name (dom-tag d-list))
;d-list
#+END_SRC

#+RESULTS:
| section |

* [2021-01-15 Fri]
#+BEGIN_SRC emacs-lisp
    (load-file "./gp-util.el")
    (require 'gp-util)
    (require 'dom)
    (setq patent-number "US8683200B2")
    (setq d-list (gp-get-description patent-number))

(defun render (dom result)

(push 

(nreverse (cl-reduce 

(lambda (acc object) 
(cond 
;;
;;    (tag          ((attribute . value))      text            (children))
;;      |                     |                  |                 |
;;    (atom object) (consp (car object))      (atom object)   (listp object)
;;
      ((atom object) (cons object acc)) ;; tagの抽出
;      ((and (listp object) (consp (car object))) acc)) ;; attribute 読み飛ばす
      ((and (listp object) (symbolp (car object))) (cond ( (stringp (nth 2 object)) (cons object acc))   
                                                         ( (listp (cddr object)) (render (cddr object) acc)))
      ) ;;タグを記録
;      ((and (listp object) (symbolp (car object)) (symbolp (cddr object)) ) (cons (cddr object) acc)   ) ;;タグを記録                                                       
;      ((and (listp object) (listp (cddr object))) (render (cddr object) acc))
      (t acc)
      ))
      dom :initial-value nil))
      result)
)

(render d-list nil)
;d-list

;(dom-by-tag d-list 'p)
#+END_SRC

#+RESULTS:
| section | (h2 nil Description) | (((heading nil STATEMENT OF RELATED APPLICATION) (p ((num . p-0002)) This application is a continuation of U.S. patent application Ser. No. 10/402,035, filed Mar. 28, 2003, now matured to a patent, U.S. Pat. 7,845,014, which is incorporated herein by reference in its entirety.) (heading nil FIELD OF THE INVENTION) (p ((num . p-0003)) The present invention relates generally to the management of digital information, and more particularly to a method and apparatus for providing and accessing digital information protected by different digital rights management technologies.) (heading nil BACKGROUND OF THE INVENTION) (p ((num . p-0004)) Computers store, share and manipulate digital information that can be replicated accurately and shared widely among many computer systems. Computers share or receive digital information in a variety contexts. For example, digital information can be stored, exchanged and delivered by way of magnetic (floppy diskette) or optical (CD-ROM) storage devices. Computers operating in network environments pass digital information back and forth freely and often in great volume. In fact, more and more content is being delivered in digital form, and more and more digital content is being delivered online over private and public networks, such as Intranets, the Internet and cable TV networks. Wide-spread replication and distribution of digital products supports new methods of digital product manufacturing and distribution. That is, digitally stored items can be copied and distributed electronically outside the traditional methods of product manufacture and distribution.) (p ((num . p-0005)) For a user or client, a digital format allows more sophisticated content, while online delivery improves timeliness and convenience. For a publisher, digital content also reduces delivery costs. Unfortunately, these worthwhile attributes are often outweighed in the minds of publishers by the corresponding disadvantage that online information delivery makes it relatively easy to obtain pristine digital content and to pirate the content at the expense and harm of the publisher. Accordingly, the digital nature of these works, makes it imperative that they be secured against unauthorized copying. With no generation loss and the relative ease with which digital files may be copied and distributed, even a single unprotected copy could spawn a multitude of pirated versions, significantly reducing the demand for authorized copies.) (p ((num . p-0006)) If digital content such as digitized audio tracks, literary works in digital form, or digital images and videos could be securely distributed to consumers, then an entirely new market for these works could be created. For example, rather than purchasing music albums from a local retail outlet, consumers could download the digital data across the Internet and then write this data to their local CD-R, thus creating their own compact disks. Similarly, rather than renting a video tape from a local video retailer, consumers could download the digital version and then play it locally on their computer screens or televisions.) (p ((num . p-0007)) To address this need, Digital Rights Management (DRM) systems have recently been developed to restrict the use of digital files in order to protect the interests of content providers. DRM technologies can control file access (number of views, length of views), as well as the ability to alter, share, copy, print, and save files. These technologies may be contained within the operating system, program software, or in the actual hardware of a device. DRM systems may also be referred to as “Content Management Systems” (CMS), “Content/Copy Protection for Removable Media” (CPRM) or sometimes as “technological measures.”) (p ((num . p-0008)) DRM systems generally use two approaches to securing digital content. The first is containment, in which the content is encrypted so that it can only be accessed by authorized users. The second is marking, in which a watermark or other tag is placed on the digital content as a signal to a user-device that the content is copy-protected. DRM technologies may use one or both of these approaches. In addition to security technology, DRM systems often include technology for packaging, distributing and rendering (e.g., displaying, playing and printing) the digital content.) (p ((num . p-0009)) While DRM standardization is now being pursued by a number of organizations such as the openEBook Forum, the MPEG group, the Internet engineering Task Force and the World Wide Web Consortium, currently there is not a core DRM technology that is widely deployed. Rather, it has been necessary to build end-to-end DRM solutions around component technologies, which make the components not very interoperable. For example, it is generally not possible to take Vendor A's encryption-based packaging technology and integrate it with Vendor B's rendering application.) (heading nil SUMMARY OF THE INVENTION) (p ((num . p-0010)) In accordance with the present invention, a method and apparatus is provided for providing digital content to a client. The method begins by receiving a request from the client to receive digital content. The client is authorized to receive the digital content and the DRM implementation employed by the client is determined. The digital content is then provided to the client in conformance with the DRM implementation employed by the client.) (p ((num . p-0011)) In accordance with one aspect of the invention, the step of providing the digital content includes the step of transmitting the digital content to the client over a computer network. The computer network may be the Internet, for example.) (p ((num . p-0012)) In accordance with another aspect of the invention, the step of providing the digital content includes the step of providing a physical medium to the client in which the digital content is embodied.) (p ((num . p-0013)) In accordance with another aspect of the invention, the digital content is obtained from a content provider prior to transmitting the digital content to the client.) (p ((num . p-0014)) In accordance with another aspect of the invention, a rights package is bundled with the digital content prior to transmitting the digital content to the client.) (p ((num . p-0015)) In accordance with another aspect of the invention, the rights package includes a decryption key for decrypting the digital content.) (p ((num . p-0016)) In accordance with another aspect of the invention, the digital content includes text-based information, audio information, visual information, or any combination thereof.) (p ((num . p-0017)) In accordance with another aspect of the invention, the digital content is transmitted as streaming media.) (p ((num . p-0018)) In accordance with another aspect of the invention, a method is provided for receiving digital content from a content distributor. The method begins by transmitting a request to the content distributor to receive digital content. In addition, information is transmitted that reflects a DRM implementation in which the digital content is to be received. The digital content is received in conformance with the DRM implementation in which the digital content is to be received.) (p ((num . p-0019)) In accordance with another aspect of the invention, a DRM architecture is provided for storing and distributing digital content. The DRM architecture includes a content database for electronically storing the digital content and a DRM packager for distributing to a client the digital content in conformance with a plurality of different DRM implementations.) (p ((num . p-0020)) In accordance with another aspect of the invention, a method is provided for providing digital content to a client. The method begins by receiving a request from the client to receive digital content. The client is authorized to receive the digital content. A universal DRM layer is added to the digital content. The universal DRM layer is able to access digital content in conformance with a plurality of different DRM implementations. The digital content is in conformance with one of the plurality of different DRM implementations. The digital content is provided to the client in conformance with the universal DRM layer.) ((heading nil BRIEF DESCRIPTION OF THE DRAWINGS) ((figref ((idrefs . DRAWINGS)) FIG. 1)  shows an overview of a generalized DRM architecture that encompasses a content provider and a client.) ((figref ((idrefs . DRAWINGS)) FIG. 2)  is a flow-chart illustrating an exemplary sequence of steps employed by the content provider for providing digital content to a client in accordance with the present invention.)) (heading nil DETAILED DESCRIPTION) (p ((num . p-0023)) The present inventor has recognized that the problems arising from the incompatibility of different DRM technologies can be alleviated by making digital content available in multiple DRM formats. Upon a user's request, the digital content can be provided to the user in conformance with the particular DRM format employed by the user. Accordingly, compatibility between the DRM technology employed by the content provider and the DRM technology employed by the user or client becomes less of a problem, provided that the user's DRM technology matches one of the formats used by the content provider.) (p ((num . p-0024)) At the outset, a high level view of a generalized DRM architecture will be presented to facilitate an understanding of the present invention. Most vendor-specific DRM implementations can be described in terms of this generalized architecture. As shown in  (figref ((idrefs . DRAWINGS)) FIG. 1) , the major components of the DRM architecture are the content server  (b nil 110) , the license server  (b nil 130) , and the client  (b nil 120) .) (p ((num . p-0025)) Turning first to the content server  (b nil 110) , it includes a content repository  (b nil 112)  in which the actual content to be licensed is stored. The content server  (b nil 110)  also includes a product database  (b nil 114)  that stores information describing the content to be licensed, such as marketing information, catalogues, and prices. Finally, a DRM packager  (b nil 116)  is incorporated into the content server  (b nil 110)  to prepare the content for distribution. In particular, the DRM packager  (b nil 116)  may encrypt the content, possibly make it tamper-proof, and possibly add a watermark. The DRM packager  (b nil 116)  also creates a description of the rights that the content provider is willing to allow the user to exercise with respect to the content. In the simplest case the DRM packager  (b nil 116)  bundles the rights with the content and sends it to the user. In more flexible arrangements the content package is kept separate from the rights, with the rights being embodied in a separate license. This arrangement is particularly useful in connection with streaming media, which cannot be bundled with the content package. The DRM packager  (b nil 116)  may also create encryption keys to authenticate the user and decrypt the content. While in  (figref ((idrefs . DRAWINGS)) FIG. 1)  the DRM packager  (b nil 116)  is associated with the content server  (b nil 110) , it should be noted that in general the content may be prepared at any point along the distribution chain. For example, DRM packager  (b nil 116)  may be associated with a clearinghouse that prepares content for a wide variety of different content providers.) (p ((num . p-0026)) Assuming for generality that the content package and the license are distinct, the DRM packager  (b nil 116)  sends the rights specification and encryption keys that it has created to the license server  (b nil 130)  where, in  (figref ((idrefs . DRAWINGS)) FIG. 1) , they are stored in a rights database  (b nil 132)  and an encryption key database  (b nil 134) , respectively. The license server  (b nil 130)  may also include an identities database  (b nil 136)  for storing the information about the users who are entitled to exercise rights with respect to the content. A license generator  (b nil 138)  is employed to create the license using the information in the rights, encryption keys, and identities databases.) (p ((num . p-0027)) The client  (b nil 120)  refers either to the user, the device, e.g., a personal computer or PDA, or both the user and device, that is requesting the content from the content server. For the purposes of digital rights management, the primary component residing in the client  (b nil 120)  is the DRM controller  (b nil 122) , which provides the identity information to, and obtains the license from, the license server. Once the license has been obtained, the DRM controller  (b nil 122)  retrieves the encryption keys from the license, decrypts the content package and releases the content to a rendering application  (b nil 124) . The rendering application  (b nil 124)  is generally software residing in the client device that is used to view, play, print or otherwise exercise the rights with respect to the content. The DRM controller  (b nil 122)  may be software that is incorporated into the rendering application, software that is independent of the rendering application, or it even may be a dedicated hardware element. In some cases the DRM controller  (b nil 122)  is embodied in a plug-in for a rendering application, which is currently the case for Adobe Acrobat Reader, for example.) (p ((num . p-0028)) One example of a sequence of steps that may be used to acquire content and exercise rights with respect to that content using the architecture depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  is as follows. Generally, the user begins the process by obtaining a content package in any of a variety of ways, such as by downloading it over the Internet or reading it from physical media such as a CD-ROM. Next, the user makes a request to exercise rights on the content package. The request may be made through the rendering application  (b nil 124)  or some other interface, which in turn instructs the DRM controller  (b nil 122)  to gather the information required by the license server to generate a license. Such information generally includes identity information pertaining to the user and client device and/or information from the content package such as a content identifier. The DRM controller  (b nil 122)  forwards the information to the license server  (b nil 130) . In the license server  (b nil 130) , the license generator  (b nil 138)  authenticates the user's identity in its identities database  (b nil 136)  and gathers rights information from the user's license request. The license server  (b nil 130)  may also initiate a financial transaction with the user or, alternatively, may ensure that such a transaction has already been completed. The license generator  (b nil 138)  creates a license using the rights information, client identity information, and the encryption keys. The license generator  (b nil 138)  forwards the license to the client, which in turn decrypts the content and forwards it to the rendering application  (b nil 124) .) (p ((num . p-0029)) The number of vendors currently providing DRM implementations that conform to the architecture depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  is so great that for purposes of brevity only a few of them will be mentioned herein. As one example, the Media Commerce Suite is a DRM implementation available from RealNetworks that is suitable for streaming media formats such as RealAudio, RealVideo, and Windows Media. In this implementation the user downloads the Media Commerce Upgrade software, which is an add-on to a streaming media application such as RealPlayer and Windows Media Player. In terms of the  (figref ((idrefs . DRAWINGS)) FIG. 1)  architecture, the Media Commerce Upgrade software serves as the DRM controller. The RealSystem License Server corresponds to license server  (b nil 130)  in  (figref ((idrefs . DRAWINGS)) FIG. 1)  and accepts purchase requests and creates licenses for users. Another DRM implementation suitable for streaming media formats is provided by Liquid Audio, Inc. Liquid Audio supports not only Windows- and Macintosh-based client devices, but also portable devices available from vendors such as Sony, Sanyo, Palm and Toshiba. Similar to RealNetworks, Liquid Audio operates with RealAudio and Windows Media. Sony Corporation provides a variety of DRM implementations such as Open MG X, for example. Open MG X includes three distinct software modules. One module adds digital rights management information to the digital content, another module distributes the digital rights management information to the client, and a third client module is provided for developing application software that is compatible with Open MG X.) (p ((num . p-0030)) While the aforementioned DRM implementations are illustrative of those available for providing music and streaming media, other DRM implementations are designed for text- and image-based content. For example, Adobe Systems provides Adobe Content Server, which provides a DRM implementation for Adobe's own text and image application, eBook Reader. Other vendors such as InterTrust provide a DRM implementation for another text and image application provided by Adobe Systems, Acrobat Reader. InterTrust supplies a plug-in for Acrobat Reader, DocBox, which serves as the DRM controller for this implementation.) (p ((num . p-0031)) While many of the previously mentioned DRM vendors provide end-to-end DRM systems for content providers, it should be noted that not all the functional elements of such a system as depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  necessarily need to be provided by the same vendor. That is, security technology such as encryption and authentication, and technology for packaging, distributing and rendering (e.g., displaying, playing and printing) may each be provided by a different vendor. Unfortunately, as previously mentioned, if different functional elements are provided by different vendors employing various proprietary DRM technologies, the client may not be able to render the digital content in a usable manner.) (p ((num . p-0032)) To overcome this limitation, in accordance with the present invention, the DRM packager  (b nil 116)  prepares the content in conformity with a number of different DRM implementations. That is, the DRM packager  (b nil 116)  can encrypt the content and format the license so that it can be decrypted by various DRM controllers  (b nil 122)  that operate in accordance with different DRM implementations. In this way the client  (b nil 120)  is not required to have the hardware or software required by the single vendor-specific DRM implementation that is used by a given content provider.) ((figref ((idrefs . DRAWINGS)) FIG. 2)  is flow-chart illustrating an exemplary sequence of steps employed by the content provider for providing digital content to a client in accordance with the present invention. In step  (b nil 200) , the content server  (b nil 110)  seen in  (figref ((idrefs . DRAWINGS)) FIG. 1)  receives a request from the client  (b nil 120)  to receive digital content. Based on information received from the client  (b nil 120) , the DRM packager  (b nil 116)  in step  (b nil 210)  determines the particular DRM implementation that the client employs and forwards the appropriate content package to the client in accordance with that particular DRM implementation. In step  (b nil 220)  the DRM packager  (b nil 116)  provides to the license server  (b nil 130)  the information necessary to generate a license. In step  (b nil 230)  the license server  (b nil 130)  generates and forwards the license to the client  (b nil 120) , along with any necessary encryption keys, in the format required by the client's DRM controller  (b nil 122)  so that the content can be decrypted and made available to the rendering application  (b nil 124) .) (p ((num . p-0034)) In an alternative embodiment of the invention, instead of preparing the content in conformity with different DRM implementations, the DRM packager  (b nil 116)  may add a layer on top of the content package prepared by the individual DRM implementations. The additional layer can access the content by a variety of means, such as with a universal key, for example, that can decrypt content from many different DRM technologies. In this way the client only needs to have a DRM controller that is compatible with this higher-level, universal DRM implementation rather than with the individual, underlying DRM implementations.))) |

* [2021-01-15 Fri] (2)
#+BEGIN_SRC emacs-lisp
    (load-file "./gp-util.el")
    (require 'gp-util)
    (require 'dom)
    (setq patent-number "US8683200B2")
    (setq d-list (gp-get-description patent-number))

;; paragraph renderer

;(defun paragraph-renderer (dom)
;(with-temp-buffer
;(let (( num-string (dom-attr dom 'num)))
;(insert (format "#+begin_quote\n[%s]\n%s\n#+end_quote\n"  (progn (string-match "[0-9]+" num-string) (match-string 0 num-string)) (dom-text dom)))
;n(buffer-string)
;)))

;(render (car (dom-tag d-list 'p)))

(gp-paragraph-renderer (car (dom-by-tag d-list 'p)))
#+END_SRC

#+RESULTS:
: #+begin_quote
: [0002]
: This application is a continuation of U.S. patent application Ser. No. 10/402,035, filed Mar. 28, 2003, now matured to a patent, U.S. Pat. 7,845,014, which is incorporated herein by reference in its entirety.
: #+end_quote



#+BEGIN_SRC emacs-lisp
(dom-by-tag d-list 'heading)
#+END_SRC

#+RESULTS:
| heading | nil | STATEMENT OF RELATED APPLICATION  |
| heading | nil | FIELD OF THE INVENTION            |
| heading | nil | BACKGROUND OF THE INVENTION       |
| heading | nil | SUMMARY OF THE INVENTION          |
| heading | nil | BRIEF DESCRIPTION OF THE DRAWINGS |
| heading | nil | DETAILED DESCRIPTION              |

* [2021-01-16 Sat]
#+BEGIN_SRC emacs-lisp
    (load-file "./gp-util.el")
    (require 'gp-util)
    (require 'dom)
    (setq patent-number "US8683200B2")
    (setq d-list (gp-get-description patent-number))

(defun description-renderer (dom result)

(append

(nreverse (cl-reduce 

(lambda (acc object) 

(cond 

      ((and (listp object) (symbolp (car object))) (cond 
      ( (eq (car object) 'h2) (cons (format "** %s\n" (nth 2 object)) acc) )
      ( (eq (car object) 'heading) (cons (format "*** %s\n" (nth 2 object)) acc) )
      ( (eq (car object) 'p) (cons (format "%s\n" (gp-paragraph-renderer object)) acc) )							 
      ( (listp (cddr object)) (render-as-buffer (cddr object) acc))))
      (t acc) ))
      
      dom :initial-value nil

) ;; end of cl-reduce
) ;; nreverse
result);; push
;(buffer-string)
) ;; end of defun

;(render-as-buffer d-list nil)
(mapconcat 'identity (description-renderer d-list nil) "")
;(gp-paragraph-renderer '(p ((num . "p-5555")) "this is it."))
#+END_SRC

#+BEGIN_SRC emacs-lisp :results raw
(load-file "./gp-util.el")
(require 'gp-util)
(setq patent-number "US8683200B2")
(setq d-list (gp-get-description patent-number))
(gp-description-renderer d-list)
#+END_SRC

#+RESULTS:

* [2021-01-16 Sat]
#+BEGIN_SRC emacs-lisp :results raw
(load-file "./gp-util.el")
(require 'gp-util)
(require 'dom)
(setq patent-number "US8683200B2")
(setq d-list (gp-get-description patent-number))

;(gp-description-renderer d-list)
d-list
#+END_SRC

#+RESULTS:
(section 
((itemprop . description)) 
(h2 nil Description) 
(div ((itemprop . content)) 
     (div ((mxw-id . PDES67640106) 
     (lang . EN) 
     (load-source . patent-office) 
     (class . description)) 

(heading nil STATEMENT OF RELATED APPLICATION) 
(p ((num . p-0002)) This application is a continuation of U.S. patent application Ser. No. 10/402,035, filed Mar. 28, 2003, now matured to a patent, U.S. Pat. 7,845,014, which is incorporated herein by reference in its entirety.) (heading nil FIELD OF THE INVENTION) 
(p ((num . p-0003)) The present invention relates generally to the management of digital information, and more particularly to a method and apparatus for providing and accessing digital information protected by different digital rights management technologies.) (heading nil BACKGROUND OF THE INVENTION) 
(p ((num . p-0004)) Computers store, share and manipulate digital information that can be replicated accurately and shared widely among many computer systems. Computers share or receive digital information in a variety contexts. For example, digital information can be stored, exchanged and delivered by way of magnetic (floppy diskette) or optical (CD-ROM) storage devices. Computers operating in network environments pass digital information back and forth freely and often in great volume. In fact, more and more content is being delivered in digital form, and more and more digital content is being delivered online over private and public networks, such as Intranets, the Internet and cable TV networks. Wide-spread replication and distribution of digital products supports new methods of digital product manufacturing and distribution. That is, digitally stored items can be copied and distributed electronically outside the traditional methods of product manufacture and distribution.) 
(p ((num . p-0005)) For a user or client, a digital format allows more sophisticated content, while online delivery improves timeliness and convenience. For a publisher, digital content also reduces delivery costs. Unfortunately, these worthwhile attributes are often outweighed in the minds of publishers by the corresponding disadvantage that online information delivery makes it relatively easy to obtain pristine digital content and to pirate the content at the expense and harm of the publisher. Accordingly, the digital nature of these works, makes it imperative that they be secured against unauthorized copying. With no generation loss and the relative ease with which digital files may be copied and distributed, even a single unprotected copy could spawn a multitude of pirated versions, significantly reducing the demand for authorized copies.) 
(p ((num . p-0006)) If digital content such as digitized audio tracks, literary works in digital form, or digital images and videos could be securely distributed to consumers, then an entirely new market for these works could be created. For example, rather than purchasing music albums from a local retail outlet, consumers could download the digital data across the Internet and then write this data to their local CD-R, thus creating their own compact disks. Similarly, rather than renting a video tape from a local video retailer, consumers could download the digital version and then play it locally on their computer screens or televisions.) 
(p ((num . p-0007)) To address this need, Digital Rights Management (DRM) systems have recently been developed to restrict the use of digital files in order to protect the interests of content providers. DRM technologies can control file access (number of views, length of views), as well as the ability to alter, share, copy, print, and save files. These technologies may be contained within the operating system, program software, or in the actual hardware of a device. DRM systems may also be referred to as “Content Management Systems” (CMS), “Content/Copy Protection for Removable Media” (CPRM) or sometimes as “technological measures.”) 
(p ((num . p-0008)) DRM systems generally use two approaches to securing digital content. The first is containment, in which the content is encrypted so that it can only be accessed by authorized users. The second is marking, in which a watermark or other tag is placed on the digital content as a signal to a user-device that the content is copy-protected. DRM technologies may use one or both of these approaches. In addition to security technology, DRM systems often include technology for packaging, distributing and rendering (e.g., displaying, playing and printing) the digital content.) 
(p ((num . p-0009)) While DRM standardization is now being pursued by a number of organizations such as the openEBook Forum, the MPEG group, the Internet engineering Task Force and the World Wide Web Consortium, currently there is not a core DRM technology that is widely deployed. Rather, it has been necessary to build end-to-end DRM solutions around component technologies, which make the components not very interoperable. For example, it is generally not possible to take Vendor A's encryption-based packaging technology and integrate it with Vendor B's rendering application.) (heading nil SUMMARY OF THE INVENTION) 
(p ((num . p-0010)) In accordance with the present invention, a method and apparatus is provided for providing digital content to a client. The method begins by receiving a request from the client to receive digital content. The client is authorized to receive the digital content and the DRM implementation employed by the client is determined. The digital content is then provided to the client in conformance with the DRM implementation employed by the client.) 
(p ((num . p-0011)) In accordance with one aspect of the invention, the step of providing the digital content includes the step of transmitting the digital content to the client over a computer network. The computer network may be the Internet, for example.) 
(p ((num . p-0012)) In accordance with another aspect of the invention, the step of providing the digital content includes the step of providing a physical medium to the client in which the digital content is embodied.) 
(p ((num . p-0013)) In accordance with another aspect of the invention, the digital content is obtained from a content provider prior to transmitting the digital content to the client.) 
(p ((num . p-0014)) In accordance with another aspect of the invention, a rights package is bundled with the digital content prior to transmitting the digital content to the client.) 
(p ((num . p-0015)) In accordance with another aspect of the invention, the rights package includes a decryption key for decrypting the digital content.) 
(p ((num . p-0016)) In accordance with another aspect of the invention, the digital content includes text-based information, audio information, visual information, or any combination thereof.) 
(p ((num . p-0017)) In accordance with another aspect of the invention, the digital content is transmitted as streaming media.) 
(p ((num . p-0018)) In accordance with another aspect of the invention, a method is provided for receiving digital content from a content distributor. The method begins by transmitting a request to the content distributor to receive digital content. In addition, information is transmitted that reflects a DRM implementation in which the digital content is to be received. The digital content is received in conformance with the DRM implementation in which the digital content is to be received.) 
(p ((num . p-0019)) In accordance with another aspect of the invention, a DRM architecture is provided for storing and distributing digital content. The DRM architecture includes a content database for electronically storing the digital content and a DRM packager for distributing to a client the digital content in conformance with a plurality of different DRM implementations.) 
(p ((num . p-0020)) In accordance with another aspect of the invention, a method is provided for providing digital content to a client. The method begins by receiving a request from the client to receive digital content. The client is authorized to receive the digital content. A universal DRM layer is added to the digital content. The universal DRM layer is able to access digital content in conformance with a plurality of different DRM implementations. The digital content is in conformance with one of the plurality of different DRM implementations. The digital content is provided to the client in conformance with the universal DRM layer.) 

(description-of-drawings nil (heading nil BRIEF DESCRIPTION OF THE DRAWINGS) 
(p ((num . p-0021)) (figref ((idrefs . DRAWINGS)) FIG. 1)  shows an overview of a generalized DRM architecture that encompasses a content provider and a client.) 
(p ((num . p-0022)) (figref ((idrefs . DRAWINGS)) FIG. 2)  is a flow-chart illustrating an exemplary sequence of steps employed by the content provider for providing digital content to a client in accordance with the present invention.)
) 

(heading nil DETAILED DESCRIPTION) 
(p ((num . p-0023)) The present inventor has recognized that the problems arising from the incompatibility of different DRM technologies can be alleviated by making digital content available in multiple DRM formats. Upon a user's request, the digital content can be provided to the user in conformance with the particular DRM format employed by the user. Accordingly, compatibility between the DRM technology employed by the content provider and the DRM technology employed by the user or client becomes less of a problem, provided that the user's DRM technology matches one of the formats used by the content provider.) (p ((num . p-0024)) At the outset, a high level view of a generalized DRM architecture will be presented to facilitate an understanding of the present invention. Most vendor-specific DRM implementations can be described in terms of this generalized architecture. As shown in  (figref ((idrefs . DRAWINGS)) FIG. 1) , the major components of the DRM architecture are the content server  (b nil 110) , the license server  (b nil 130) , and the client  (b nil 120) .) (p ((num . p-0025)) Turning first to the content server  (b nil 110) , it includes a content repository  (b nil 112)  in which the actual content to be licensed is stored. The content server  (b nil 110)  also includes a product database  (b nil 114)  that stores information describing the content to be licensed, such as marketing information, catalogues, and prices. Finally, a DRM packager  (b nil 116)  is incorporated into the content server  (b nil 110)  to prepare the content for distribution. In particular, the DRM packager  (b nil 116)  may encrypt the content, possibly make it tamper-proof, and possibly add a watermark. The DRM packager  (b nil 116)  also creates a description of the rights that the content provider is willing to allow the user to exercise with respect to the content. In the simplest case the DRM packager  (b nil 116)  bundles the rights with the content and sends it to the user. In more flexible arrangements the content package is kept separate from the rights, with the rights being embodied in a separate license. This arrangement is particularly useful in connection with streaming media, which cannot be bundled with the content package. The DRM packager  (b nil 116)  may also create encryption keys to authenticate the user and decrypt the content. While in  (figref ((idrefs . DRAWINGS)) FIG. 1)  the DRM packager  (b nil 116)  is associated with the content server  (b nil 110) , it should be noted that in general the content may be prepared at any point along the distribution chain. For example, DRM packager  (b nil 116)  may be associated with a clearinghouse that prepares content for a wide variety of different content providers.) (p ((num . p-0026)) Assuming for generality that the content package and the license are distinct, the DRM packager  (b nil 116)  sends the rights specification and encryption keys that it has created to the license server  (b nil 130)  where, in  (figref ((idrefs . DRAWINGS)) FIG. 1) , they are stored in a rights database  (b nil 132)  and an encryption key database  (b nil 134) , respectively. The license server  (b nil 130)  may also include an identities database  (b nil 136)  for storing the information about the users who are entitled to exercise rights with respect to the content. A license generator  (b nil 138)  is employed to create the license using the information in the rights, encryption keys, and identities databases.) (p ((num . p-0027)) The client  (b nil 120)  refers either to the user, the device, e.g., a personal computer or PDA, or both the user and device, that is requesting the content from the content server. For the purposes of digital rights management, the primary component residing in the client  (b nil 120)  is the DRM controller  (b nil 122) , which provides the identity information to, and obtains the license from, the license server. Once the license has been obtained, the DRM controller  (b nil 122)  retrieves the encryption keys from the license, decrypts the content package and releases the content to a rendering application  (b nil 124) . The rendering application  (b nil 124)  is generally software residing in the client device that is used to view, play, print or otherwise exercise the rights with respect to the content. The DRM controller  (b nil 122)  may be software that is incorporated into the rendering application, software that is independent of the rendering application, or it even may be a dedicated hardware element. In some cases the DRM controller  (b nil 122)  is embodied in a plug-in for a rendering application, which is currently the case for Adobe Acrobat Reader, for example.) (p ((num . p-0028)) One example of a sequence of steps that may be used to acquire content and exercise rights with respect to that content using the architecture depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  is as follows. Generally, the user begins the process by obtaining a content package in any of a variety of ways, such as by downloading it over the Internet or reading it from physical media such as a CD-ROM. Next, the user makes a request to exercise rights on the content package. The request may be made through the rendering application  (b nil 124)  or some other interface, which in turn instructs the DRM controller  (b nil 122)  to gather the information required by the license server to generate a license. Such information generally includes identity information pertaining to the user and client device and/or information from the content package such as a content identifier. The DRM controller  (b nil 122)  forwards the information to the license server  (b nil 130) . In the license server  (b nil 130) , the license generator  (b nil 138)  authenticates the user's identity in its identities database  (b nil 136)  and gathers rights information from the user's license request. The license server  (b nil 130)  may also initiate a financial transaction with the user or, alternatively, may ensure that such a transaction has already been completed. The license generator  (b nil 138)  creates a license using the rights information, client identity information, and the encryption keys. The license generator  (b nil 138)  forwards the license to the client, which in turn decrypts the content and forwards it to the rendering application  (b nil 124) .) (p ((num . p-0029)) The number of vendors currently providing DRM implementations that conform to the architecture depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  is so great that for purposes of brevity only a few of them will be mentioned herein. As one example, the Media Commerce Suite is a DRM implementation available from RealNetworks that is suitable for streaming media formats such as RealAudio, RealVideo, and Windows Media. In this implementation the user downloads the Media Commerce Upgrade software, which is an add-on to a streaming media application such as RealPlayer and Windows Media Player. In terms of the  (figref ((idrefs . DRAWINGS)) FIG. 1)  architecture, the Media Commerce Upgrade software serves as the DRM controller. The RealSystem License Server corresponds to license server  (b nil 130)  in  (figref ((idrefs . DRAWINGS)) FIG. 1)  and accepts purchase requests and creates licenses for users. Another DRM implementation suitable for streaming media formats is provided by Liquid Audio, Inc. Liquid Audio supports not only Windows- and Macintosh-based client devices, but also portable devices available from vendors such as Sony, Sanyo, Palm and Toshiba. Similar to RealNetworks, Liquid Audio operates with RealAudio and Windows Media. Sony Corporation provides a variety of DRM implementations such as Open MG X, for example. Open MG X includes three distinct software modules. One module adds digital rights management information to the digital content, another module distributes the digital rights management information to the client, and a third client module is provided for developing application software that is compatible with Open MG X.) (p ((num . p-0030)) While the aforementioned DRM implementations are illustrative of those available for providing music and streaming media, other DRM implementations are designed for text- and image-based content. For example, Adobe Systems provides Adobe Content Server, which provides a DRM implementation for Adobe's own text and image application, eBook Reader. Other vendors such as InterTrust provide a DRM implementation for another text and image application provided by Adobe Systems, Acrobat Reader. InterTrust supplies a plug-in for Acrobat Reader, DocBox, which serves as the DRM controller for this implementation.) (p ((num . p-0031)) While many of the previously mentioned DRM vendors provide end-to-end DRM systems for content providers, it should be noted that not all the functional elements of such a system as depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  necessarily need to be provided by the same vendor. That is, security technology such as encryption and authentication, and technology for packaging, distributing and rendering (e.g., displaying, playing and printing) may each be provided by a different vendor. Unfortunately, as previously mentioned, if different functional elements are provided by different vendors employing various proprietary DRM technologies, the client may not be able to render the digital content in a usable manner.) (p ((num . p-0032)) To overcome this limitation, in accordance with the present invention, the DRM packager  (b nil 116)  prepares the content in conformity with a number of different DRM implementations. That is, the DRM packager  (b nil 116)  can encrypt the content and format the license so that it can be decrypted by various DRM controllers  (b nil 122)  that operate in accordance with different DRM implementations. In this way the client  (b nil 120)  is not required to have the hardware or software required by the single vendor-specific DRM implementation that is used by a given content provider.) (p ((num . p-0033)) (figref ((idrefs . DRAWINGS)) FIG. 2)  is flow-chart illustrating an exemplary sequence of steps employed by the content provider for providing digital content to a client in accordance with the present invention. In step  (b nil 200) , the content server  (b nil 110)  seen in  (figref ((idrefs . DRAWINGS)) FIG. 1)  receives a request from the client  (b nil 120)  to receive digital content. Based on information received from the client  (b nil 120) , the DRM packager  (b nil 116)  in step  (b nil 210)  determines the particular DRM implementation that the client employs and forwards the appropriate content package to the client in accordance with that particular DRM implementation. In step  (b nil 220)  the DRM packager  (b nil 116)  provides to the license server  (b nil 130)  the information necessary to generate a license. In step  (b nil 230)  the license server  (b nil 130)  generates and forwards the license to the client  (b nil 120) , along with any necessary encryption keys, in the format required by the client's DRM controller  (b nil 122)  so that the content can be decrypted and made available to the rendering application  (b nil 124) .) (p ((num . p-0034)) In an alternative embodiment of the invention, instead of preparing the content in conformity with different DRM implementations, the DRM packager  (b nil 116)  may add a layer on top of the content package prepared by the individual DRM implementations. The additional layer can access the content by a variety of means, such as with a universal key, for example, that can decrypt content from many different DRM technologies. In this way the client only needs to have a DRM controller that is compatible with this higher-level, universal DRM implementation rather than with the individual, underlying DRM implementations.))))

* [2021-01-17 Sun]
#+BEGIN_SRC emacs-lisp :results raw
  (load-file "./gp-util.el")
  (require 'gp-util)
  (require 'dom)
  (setq patent-number "US8683200B2")
  (setq d-list (gp-get-description patent-number))

  (defun description-renderer-1 (dom result)
    (append
     (cl-reduce 

		(lambda (acc object) 
		  (cond 
		   ((and (listp object) (symbolp (car object)))
		    (cond 
		     ( (eq (car object) 'h2) (cons (format "** %s\n" (nth 2 object)) acc) )
		     ( (eq (car object) 'heading) (cons (format "*** %s\n" (nth 2 object)) acc) )
		     ( (eq (car object) 'p) (cons (format "%s\n" (gp-paragraph-renderer object)) acc) )
;		     ( (eq (car object) 'description-of-drawings) (description-renderer-1 (cddr object) nil ))
		     ( t (description-renderer-1 (cddr object) acc ))
                     ( t acc)
		     ))
		   (t acc)))
	      
		dom :initial-value nil
		) ;; cl-reduce
     result) ;;append
    );; defun

  (defun description-renderer (dom)
    (mapconcat 'identity (nreverse (description-renderer-1 dom nil)) ""))

  (description-renderer d-list)
#+END_SRC

#+RESULTS:
** Description
*** STATEMENT OF RELATED APPLICATION
#+begin_quote
[0002]
(This application is a continuation of U.S. patent application Ser. No. 10/402,035, filed Mar. 28, 2003, now matured to a patent, U.S. Pat. 7,845,014, which is incorporated herein by reference in its entirety.)
#+end_quote
*** FIELD OF THE INVENTION
#+begin_quote
[0003]
(The present invention relates generally to the management of digital information, and more particularly to a method and apparatus for providing and accessing digital information protected by different digital rights management technologies.)
#+end_quote
*** BACKGROUND OF THE INVENTION
#+begin_quote
[0004]
(Computers store, share and manipulate digital information that can be replicated accurately and shared widely among many computer systems. Computers share or receive digital information in a variety contexts. For example, digital information can be stored, exchanged and delivered by way of magnetic (floppy diskette) or optical (CD-ROM) storage devices. Computers operating in network environments pass digital information back and forth freely and often in great volume. In fact, more and more content is being delivered in digital form, and more and more digital content is being delivered online over private and public networks, such as Intranets, the Internet and cable TV networks. Wide-spread replication and distribution of digital products supports new methods of digital product manufacturing and distribution. That is, digitally stored items can be copied and distributed electronically outside the traditional methods of product manufacture and distribution.)
#+end_quote
#+begin_quote
[0005]
(For a user or client, a digital format allows more sophisticated content, while online delivery improves timeliness and convenience. For a publisher, digital content also reduces delivery costs. Unfortunately, these worthwhile attributes are often outweighed in the minds of publishers by the corresponding disadvantage that online information delivery makes it relatively easy to obtain pristine digital content and to pirate the content at the expense and harm of the publisher. Accordingly, the digital nature of these works, makes it imperative that they be secured against unauthorized copying. With no generation loss and the relative ease with which digital files may be copied and distributed, even a single unprotected copy could spawn a multitude of pirated versions, significantly reducing the demand for authorized copies.)
#+end_quote
#+begin_quote
[0006]
(If digital content such as digitized audio tracks, literary works in digital form, or digital images and videos could be securely distributed to consumers, then an entirely new market for these works could be created. For example, rather than purchasing music albums from a local retail outlet, consumers could download the digital data across the Internet and then write this data to their local CD-R, thus creating their own compact disks. Similarly, rather than renting a video tape from a local video retailer, consumers could download the digital version and then play it locally on their computer screens or televisions.)
#+end_quote
#+begin_quote
[0007]
(To address this need, Digital Rights Management (DRM) systems have recently been developed to restrict the use of digital files in order to protect the interests of content providers. DRM technologies can control file access (number of views, length of views), as well as the ability to alter, share, copy, print, and save files. These technologies may be contained within the operating system, program software, or in the actual hardware of a device. DRM systems may also be referred to as “Content Management Systems” (CMS), “Content/Copy Protection for Removable Media” (CPRM) or sometimes as “technological measures.”)
#+end_quote
#+begin_quote
[0008]
(DRM systems generally use two approaches to securing digital content. The first is containment, in which the content is encrypted so that it can only be accessed by authorized users. The second is marking, in which a watermark or other tag is placed on the digital content as a signal to a user-device that the content is copy-protected. DRM technologies may use one or both of these approaches. In addition to security technology, DRM systems often include technology for packaging, distributing and rendering (e.g., displaying, playing and printing) the digital content.)
#+end_quote
#+begin_quote
[0009]
(While DRM standardization is now being pursued by a number of organizations such as the openEBook Forum, the MPEG group, the Internet engineering Task Force and the World Wide Web Consortium, currently there is not a core DRM technology that is widely deployed. Rather, it has been necessary to build end-to-end DRM solutions around component technologies, which make the components not very interoperable. For example, it is generally not possible to take Vendor A's encryption-based packaging technology and integrate it with Vendor B's rendering application.)
#+end_quote
*** SUMMARY OF THE INVENTION
#+begin_quote
[0010]
(In accordance with the present invention, a method and apparatus is provided for providing digital content to a client. The method begins by receiving a request from the client to receive digital content. The client is authorized to receive the digital content and the DRM implementation employed by the client is determined. The digital content is then provided to the client in conformance with the DRM implementation employed by the client.)
#+end_quote
#+begin_quote
[0011]
(In accordance with one aspect of the invention, the step of providing the digital content includes the step of transmitting the digital content to the client over a computer network. The computer network may be the Internet, for example.)
#+end_quote
#+begin_quote
[0012]
(In accordance with another aspect of the invention, the step of providing the digital content includes the step of providing a physical medium to the client in which the digital content is embodied.)
#+end_quote
#+begin_quote
[0013]
(In accordance with another aspect of the invention, the digital content is obtained from a content provider prior to transmitting the digital content to the client.)
#+end_quote
#+begin_quote
[0014]
(In accordance with another aspect of the invention, a rights package is bundled with the digital content prior to transmitting the digital content to the client.)
#+end_quote
#+begin_quote
[0015]
(In accordance with another aspect of the invention, the rights package includes a decryption key for decrypting the digital content.)
#+end_quote
#+begin_quote
[0016]
(In accordance with another aspect of the invention, the digital content includes text-based information, audio information, visual information, or any combination thereof.)
#+end_quote
#+begin_quote
[0017]
(In accordance with another aspect of the invention, the digital content is transmitted as streaming media.)
#+end_quote
#+begin_quote
[0018]
(In accordance with another aspect of the invention, a method is provided for receiving digital content from a content distributor. The method begins by transmitting a request to the content distributor to receive digital content. In addition, information is transmitted that reflects a DRM implementation in which the digital content is to be received. The digital content is received in conformance with the DRM implementation in which the digital content is to be received.)
#+end_quote
#+begin_quote
[0019]
(In accordance with another aspect of the invention, a DRM architecture is provided for storing and distributing digital content. The DRM architecture includes a content database for electronically storing the digital content and a DRM packager for distributing to a client the digital content in conformance with a plurality of different DRM implementations.)
#+end_quote
#+begin_quote
[0020]
(In accordance with another aspect of the invention, a method is provided for providing digital content to a client. The method begins by receiving a request from the client to receive digital content. The client is authorized to receive the digital content. A universal DRM layer is added to the digital content. The universal DRM layer is able to access digital content in conformance with a plurality of different DRM implementations. The digital content is in conformance with one of the plurality of different DRM implementations. The digital content is provided to the client in conformance with the universal DRM layer.)
#+end_quote
*** BRIEF DESCRIPTION OF THE DRAWINGS
#+begin_quote
[0021]
((figref ((idrefs . DRAWINGS)) FIG. 1)  shows an overview of a generalized DRM architecture that encompasses a content provider and a client.)
#+end_quote
#+begin_quote
[0022]
((figref ((idrefs . DRAWINGS)) FIG. 2)  is a flow-chart illustrating an exemplary sequence of steps employed by the content provider for providing digital content to a client in accordance with the present invention.)
#+end_quote
*** DETAILED DESCRIPTION
#+begin_quote
[0023]
(The present inventor has recognized that the problems arising from the incompatibility of different DRM technologies can be alleviated by making digital content available in multiple DRM formats. Upon a user's request, the digital content can be provided to the user in conformance with the particular DRM format employed by the user. Accordingly, compatibility between the DRM technology employed by the content provider and the DRM technology employed by the user or client becomes less of a problem, provided that the user's DRM technology matches one of the formats used by the content provider.)
#+end_quote
#+begin_quote
[0024]
(At the outset, a high level view of a generalized DRM architecture will be presented to facilitate an understanding of the present invention. Most vendor-specific DRM implementations can be described in terms of this generalized architecture. As shown in  (figref ((idrefs . DRAWINGS)) FIG. 1) , the major components of the DRM architecture are the content server  (b nil 110) , the license server  (b nil 130) , and the client  (b nil 120) .)
#+end_quote
#+begin_quote
[0025]
(Turning first to the content server  (b nil 110) , it includes a content repository  (b nil 112)  in which the actual content to be licensed is stored. The content server  (b nil 110)  also includes a product database  (b nil 114)  that stores information describing the content to be licensed, such as marketing information, catalogues, and prices. Finally, a DRM packager  (b nil 116)  is incorporated into the content server  (b nil 110)  to prepare the content for distribution. In particular, the DRM packager  (b nil 116)  may encrypt the content, possibly make it tamper-proof, and possibly add a watermark. The DRM packager  (b nil 116)  also creates a description of the rights that the content provider is willing to allow the user to exercise with respect to the content. In the simplest case the DRM packager  (b nil 116)  bundles the rights with the content and sends it to the user. In more flexible arrangements the content package is kept separate from the rights, with the rights being embodied in a separate license. This arrangement is particularly useful in connection with streaming media, which cannot be bundled with the content package. The DRM packager  (b nil 116)  may also create encryption keys to authenticate the user and decrypt the content. While in  (figref ((idrefs . DRAWINGS)) FIG. 1)  the DRM packager  (b nil 116)  is associated with the content server  (b nil 110) , it should be noted that in general the content may be prepared at any point along the distribution chain. For example, DRM packager  (b nil 116)  may be associated with a clearinghouse that prepares content for a wide variety of different content providers.)
#+end_quote
#+begin_quote
[0026]
(Assuming for generality that the content package and the license are distinct, the DRM packager  (b nil 116)  sends the rights specification and encryption keys that it has created to the license server  (b nil 130)  where, in  (figref ((idrefs . DRAWINGS)) FIG. 1) , they are stored in a rights database  (b nil 132)  and an encryption key database  (b nil 134) , respectively. The license server  (b nil 130)  may also include an identities database  (b nil 136)  for storing the information about the users who are entitled to exercise rights with respect to the content. A license generator  (b nil 138)  is employed to create the license using the information in the rights, encryption keys, and identities databases.)
#+end_quote
#+begin_quote
[0027]
(The client  (b nil 120)  refers either to the user, the device, e.g., a personal computer or PDA, or both the user and device, that is requesting the content from the content server. For the purposes of digital rights management, the primary component residing in the client  (b nil 120)  is the DRM controller  (b nil 122) , which provides the identity information to, and obtains the license from, the license server. Once the license has been obtained, the DRM controller  (b nil 122)  retrieves the encryption keys from the license, decrypts the content package and releases the content to a rendering application  (b nil 124) . The rendering application  (b nil 124)  is generally software residing in the client device that is used to view, play, print or otherwise exercise the rights with respect to the content. The DRM controller  (b nil 122)  may be software that is incorporated into the rendering application, software that is independent of the rendering application, or it even may be a dedicated hardware element. In some cases the DRM controller  (b nil 122)  is embodied in a plug-in for a rendering application, which is currently the case for Adobe Acrobat Reader, for example.)
#+end_quote
#+begin_quote
[0028]
(One example of a sequence of steps that may be used to acquire content and exercise rights with respect to that content using the architecture depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  is as follows. Generally, the user begins the process by obtaining a content package in any of a variety of ways, such as by downloading it over the Internet or reading it from physical media such as a CD-ROM. Next, the user makes a request to exercise rights on the content package. The request may be made through the rendering application  (b nil 124)  or some other interface, which in turn instructs the DRM controller  (b nil 122)  to gather the information required by the license server to generate a license. Such information generally includes identity information pertaining to the user and client device and/or information from the content package such as a content identifier. The DRM controller  (b nil 122)  forwards the information to the license server  (b nil 130) . In the license server  (b nil 130) , the license generator  (b nil 138)  authenticates the user's identity in its identities database  (b nil 136)  and gathers rights information from the user's license request. The license server  (b nil 130)  may also initiate a financial transaction with the user or, alternatively, may ensure that such a transaction has already been completed. The license generator  (b nil 138)  creates a license using the rights information, client identity information, and the encryption keys. The license generator  (b nil 138)  forwards the license to the client, which in turn decrypts the content and forwards it to the rendering application  (b nil 124) .)
#+end_quote
#+begin_quote
[0029]
(The number of vendors currently providing DRM implementations that conform to the architecture depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  is so great that for purposes of brevity only a few of them will be mentioned herein. As one example, the Media Commerce Suite is a DRM implementation available from RealNetworks that is suitable for streaming media formats such as RealAudio, RealVideo, and Windows Media. In this implementation the user downloads the Media Commerce Upgrade software, which is an add-on to a streaming media application such as RealPlayer and Windows Media Player. In terms of the  (figref ((idrefs . DRAWINGS)) FIG. 1)  architecture, the Media Commerce Upgrade software serves as the DRM controller. The RealSystem License Server corresponds to license server  (b nil 130)  in  (figref ((idrefs . DRAWINGS)) FIG. 1)  and accepts purchase requests and creates licenses for users. Another DRM implementation suitable for streaming media formats is provided by Liquid Audio, Inc. Liquid Audio supports not only Windows- and Macintosh-based client devices, but also portable devices available from vendors such as Sony, Sanyo, Palm and Toshiba. Similar to RealNetworks, Liquid Audio operates with RealAudio and Windows Media. Sony Corporation provides a variety of DRM implementations such as Open MG X, for example. Open MG X includes three distinct software modules. One module adds digital rights management information to the digital content, another module distributes the digital rights management information to the client, and a third client module is provided for developing application software that is compatible with Open MG X.)
#+end_quote
#+begin_quote
[0030]
(While the aforementioned DRM implementations are illustrative of those available for providing music and streaming media, other DRM implementations are designed for text- and image-based content. For example, Adobe Systems provides Adobe Content Server, which provides a DRM implementation for Adobe's own text and image application, eBook Reader. Other vendors such as InterTrust provide a DRM implementation for another text and image application provided by Adobe Systems, Acrobat Reader. InterTrust supplies a plug-in for Acrobat Reader, DocBox, which serves as the DRM controller for this implementation.)
#+end_quote
#+begin_quote
[0031]
(While many of the previously mentioned DRM vendors provide end-to-end DRM systems for content providers, it should be noted that not all the functional elements of such a system as depicted in  (figref ((idrefs . DRAWINGS)) FIG. 1)  necessarily need to be provided by the same vendor. That is, security technology such as encryption and authentication, and technology for packaging, distributing and rendering (e.g., displaying, playing and printing) may each be provided by a different vendor. Unfortunately, as previously mentioned, if different functional elements are provided by different vendors employing various proprietary DRM technologies, the client may not be able to render the digital content in a usable manner.)
#+end_quote
#+begin_quote
[0032]
(To overcome this limitation, in accordance with the present invention, the DRM packager  (b nil 116)  prepares the content in conformity with a number of different DRM implementations. That is, the DRM packager  (b nil 116)  can encrypt the content and format the license so that it can be decrypted by various DRM controllers  (b nil 122)  that operate in accordance with different DRM implementations. In this way the client  (b nil 120)  is not required to have the hardware or software required by the single vendor-specific DRM implementation that is used by a given content provider.)
#+end_quote
#+begin_quote
[0033]
((figref ((idrefs . DRAWINGS)) FIG. 2)  is flow-chart illustrating an exemplary sequence of steps employed by the content provider for providing digital content to a client in accordance with the present invention. In step  (b nil 200) , the content server  (b nil 110)  seen in  (figref ((idrefs . DRAWINGS)) FIG. 1)  receives a request from the client  (b nil 120)  to receive digital content. Based on information received from the client  (b nil 120) , the DRM packager  (b nil 116)  in step  (b nil 210)  determines the particular DRM implementation that the client employs and forwards the appropriate content package to the client in accordance with that particular DRM implementation. In step  (b nil 220)  the DRM packager  (b nil 116)  provides to the license server  (b nil 130)  the information necessary to generate a license. In step  (b nil 230)  the license server  (b nil 130)  generates and forwards the license to the client  (b nil 120) , along with any necessary encryption keys, in the format required by the client's DRM controller  (b nil 122)  so that the content can be decrypted and made available to the rendering application  (b nil 124) .)
#+end_quote
#+begin_quote
[0034]
(In an alternative embodiment of the invention, instead of preparing the content in conformity with different DRM implementations, the DRM packager  (b nil 116)  may add a layer on top of the content package prepared by the individual DRM implementations. The additional layer can access the content by a variety of means, such as with a universal key, for example, that can decrypt content from many different DRM technologies. In this way the client only needs to have a DRM controller that is compatible with this higher-level, universal DRM implementation rather than with the individual, underlying DRM implementations.)
#+end_quote



#+BEGIN_SRC emacs-lisp :results raw
(load-file "./gp-util.el")
(require 'gp-util)
(require 'dom)
(setq patent-number "US8683200B2")
(setq d-list (gp-get-description patent-number))
(description-renderer d-list)
#+END_SRC

* [2021-01-18 Mon]
  
#+BEGIN_SRC emacs-lisp :results raw
(load-file "./gp-util.el")
(require 'gp-util)
(require 'dom)
(setq patent-number "US8683200B2")
(setq c-list (gp-get-claims patent-number))
(gp-claims-renderer c-list)
#+END_SRC

#+RESULTS:

(section ((itemprop . claims)) 
(h2 nil Claims ( (span ((itemprop . count)) 20) ))

(div ((itemprop . content)) (div ((mxw-id . PCLM59642781) (lang . EN)
(load-source . patent-office) (class . claims)) 

(claim-statement nil The invention claimed is:) 

 (div ((class . claim)) 
        (div ((id . CLM-00001) (num . 00001) (class . claim)) 
	(div ((class . claim-text)) 1. A content server for storing and distributing digital content, comprising:
       

 (div ((class . claim-text)) a processor;) (div ((class . claim-text)) a content database configured to electronically store the digital content; and) (div ((class . claim-text)) a DRM packager, implemented at least in part in said processor, for distributing to a client the digital content from said content database in conformance with a universal DRM implementation that can access digital content in conformance with a plurality of different DRM implementations,) (div ((class . claim-text)) wherein said DRM packager is configured to encrypt the digital content, to tamper-proof or watermark the digital content, and to distribute the digital content.)))) (div ((class . claim-dependent)) (div ((id . CLM-00020) (num . 00020) (class . claim)) (div ((class . claim-text)) 20. The content server of  (claim-ref ((idref . CLM-00019)) claim 19) , wherein the DRM packager bundles a rights package with the digital content prior to transmitting the digital content to the client, and wherein the rights package includes a decryption key for decrypting the digital content.))))))

#+BEGIN_SRC emacs-lisp
(load-file "./gp-util.el")
(require 'gp-util)
(require 'dom)
(setq patent-number "US8683200B2")
(setq c-list (gp-get-claims patent-number))
(gp-claims-renderer c-list)

(defun gp-claim-text-renderer (dom)
  "Receive a paragraph as a dom and render it as text."
  (let (( num-string (dom-attr dom 'num)))
    (format "#+begin_quote\n[%s]\n%s\n#+end_quote"
	    (progn (string-match "[0-9]+" num-string) (match-string 0 num-string)) (dom-children dom))    
    ))

(defun gp-claims-renderer-1 (dom result)
  (append
   (cl-reduce 

    (lambda (acc object) 
      (cond 
       ((and (listp object) (symbolp (car object)))
	(cond 
	 ( (eq (car object) 'h2) (cons (format "** %s\n" (cddr object)) acc) )
	 ( (eq (car object) 'heading) (cons (format "*** %s\n" (nth 2 object)) acc) )
	 ( (eq (car object) 'claim-statement) (cons (format "%s\n" (nth 2 object)) acc) )	 
	 ( (and (eq (car object) 'div) (eq (car (car (car (cdr object)))) 'id ))
	   (cons (format "%s\n" (gp-claim-text-renderer object)) acc) )
	 ( t (gp-claims-renderer-1 (cddr object) acc ))
	 ( t acc)
	 ))
       (t acc)))
	      
    dom :initial-value nil
    ) ;; cl-reduce
   result) ;;append
  );; defun

(defun gp-claims-renderer (dom)
  (mapconcat 'identity (nreverse (gp-claims-renderer-1 dom nil)) ""))


(gp-claims-renderer c-list)
#+END_SRC

#+RESULTS:
#+begin_example
,** (Claims ( (span ((itemprop . count)) 20) ))
The invention claimed is:
,#+begin_quote
[00001]
((div ((class . claim-text)) 1. A content server for storing and distributing digital content, comprising:
 (div ((class . claim-text)) a processor;) (div ((class . claim-text)) a content database configured to electronically store the digital content; and) (div ((class . claim-text)) a DRM packager, implemented at least in part in said processor, for adding a universal DRM layer to the digital content stored at said content database, wherein said universal DRM layer is able to access digital content in conformance with a plurality of different DRM implementations, said digital content being in conformance with one of said plurality of different DRM implementations.)))
,#+end_quote
,#+begin_quote
[00002]
((div ((class . claim-text)) 2. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein said DRM packager is configured to encrypt the digital content based upon the universal DRM layer.))
,#+end_quote
,#+begin_quote
[00003]
((div ((class . claim-text)) 3. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein said DRM packager is configured to tamper-proof or watermark the digital content.))
,#+end_quote
,#+begin_quote
[00004]
((div ((class . claim-text)) 4. The content server of  (claim-ref ((idref . CLM-00002)) claim 2)  wherein said DRM packager is configured to tamper-proof or watermark the digital content.))
,#+end_quote
,#+begin_quote
[00005]
((div ((class . claim-text)) 5. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the DRM packager distributes the digital content over a computer network.))
,#+end_quote
,#+begin_quote
[00006]
((div ((class . claim-text)) 6. The content server of  (claim-ref ((idref . CLM-00005)) claim 5)  wherein said computer network is the Internet.))
,#+end_quote
,#+begin_quote
[00007]
((div ((class . claim-text)) 7. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the content database and the DRM packager are in communication over a computer network.))
,#+end_quote
,#+begin_quote
[00008]
((div ((class . claim-text)) 8. The content server of  (claim-ref ((idref . CLM-00007)) claim 7)  wherein said computer network is the Internet.))
,#+end_quote
,#+begin_quote
[00009]
((div ((class . claim-text)) 9. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the DRM packager further distributes a rights package to the user.))
,#+end_quote
,#+begin_quote
[00010]
((div ((class . claim-text)) 10. The content server of  (claim-ref ((idref . CLM-00009)) claim 9)  wherein the rights package is bundled with the digital content.))
,#+end_quote
,#+begin_quote
[00011]
((div ((class . claim-text)) 11. The content server of  (claim-ref ((idref . CLM-00009)) claim 9)  wherein the rights package includes a decryption key.))
,#+end_quote
,#+begin_quote
[00012]
((div ((class . claim-text)) 12. The content server of  (claim-ref ((idref . CLM-00010)) claim 10)  wherein the rights package includes a decryption key.))
,#+end_quote
,#+begin_quote
[00013]
((div ((class . claim-text)) 13. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the digital content includes text-based information.))
,#+end_quote
,#+begin_quote
[00014]
((div ((class . claim-text)) 14. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the digital content includes audio information.))
,#+end_quote
,#+begin_quote
[00015]
((div ((class . claim-text)) 15. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the digital content include visual information.))
,#+end_quote
,#+begin_quote
[00016]
((div ((class . claim-text)) 16. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the digital content includes audio and visual information.))
,#+end_quote
,#+begin_quote
[00017]
((div ((class . claim-text)) 17. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the step of transmitting the digital content includes the step of transmitting the digital content as streaming media.))
,#+end_quote
,#+begin_quote
[00018]
((div ((class . claim-text)) 18. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the DRM packager is configured, in response to a request from a client to receive the digital content in conformance with a first of the plurality of different DRM implementations, to distribute the digital content together with the universal DRM layer added to the digital content.))
,#+end_quote
,#+begin_quote
[00019]
((div ((class . claim-text)) 19. A content server for storing and distributing digital content, comprising:
 (div ((class . claim-text)) a processor;) (div ((class . claim-text)) a content database configured to electronically store the digital content; and) (div ((class . claim-text)) a DRM packager, implemented at least in part in said processor, for distributing to a client the digital content from said content database in conformance with a universal DRM implementation that can access digital content in conformance with a plurality of different DRM implementations,) (div ((class . claim-text)) wherein said DRM packager is configured to encrypt the digital content, to tamper-proof or watermark the digital content, and to distribute the digital content.)))
,#+end_quote
,#+begin_quote
[00020]
((div ((class . claim-text)) 20. The content server of  (claim-ref ((idref . CLM-00019)) claim 19) , wherein the DRM packager bundles a rights package with the digital content prior to transmitting the digital content to the client, and wherein the rights package includes a decryption key for decrypting the digital content.))
,#+end_quote
#+end_example


#+BEGIN_SRC emacs-lisp :results raw
(load-file "./gp-util.el")
(require 'gp-util)
(require 'dom)
(setq patent-number "US8683200B2")
(setq c-list (gp-get-claims patent-number))
(gp-claims-renderer c-list)
#+end_src

#+RESULTS:
** (Claims ( (span ((itemprop . count)) 20) ))
The invention claimed is:
#+begin_quote
[00001]
((div ((class . claim-text)) 1. A content server for storing and distributing digital content, comprising:
 (div ((class . claim-text)) a processor;) (div ((class . claim-text)) a content database configured to electronically store the digital content; and) (div ((class . claim-text)) a DRM packager, implemented at least in part in said processor, for adding a universal DRM layer to the digital content stored at said content database, wherein said universal DRM layer is able to access digital content in conformance with a plurality of different DRM implementations, said digital content being in conformance with one of said plurality of different DRM implementations.)))
#+end_quote
#+begin_quote
[00002]
((div ((class . claim-text)) 2. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein said DRM packager is configured to encrypt the digital content based upon the universal DRM layer.))
#+end_quote
#+begin_quote
[00003]
((div ((class . claim-text)) 3. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein said DRM packager is configured to tamper-proof or watermark the digital content.))
#+end_quote
#+begin_quote
[00004]
((div ((class . claim-text)) 4. The content server of  (claim-ref ((idref . CLM-00002)) claim 2)  wherein said DRM packager is configured to tamper-proof or watermark the digital content.))
#+end_quote
#+begin_quote
[00005]
((div ((class . claim-text)) 5. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the DRM packager distributes the digital content over a computer network.))
#+end_quote
#+begin_quote
[00006]
((div ((class . claim-text)) 6. The content server of  (claim-ref ((idref . CLM-00005)) claim 5)  wherein said computer network is the Internet.))
#+end_quote
#+begin_quote
[00007]
((div ((class . claim-text)) 7. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the content database and the DRM packager are in communication over a computer network.))
#+end_quote
#+begin_quote
[00008]
((div ((class . claim-text)) 8. The content server of  (claim-ref ((idref . CLM-00007)) claim 7)  wherein said computer network is the Internet.))
#+end_quote
#+begin_quote
[00009]
((div ((class . claim-text)) 9. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the DRM packager further distributes a rights package to the user.))
#+end_quote
#+begin_quote
[00010]
((div ((class . claim-text)) 10. The content server of  (claim-ref ((idref . CLM-00009)) claim 9)  wherein the rights package is bundled with the digital content.))
#+end_quote
#+begin_quote
[00011]
((div ((class . claim-text)) 11. The content server of  (claim-ref ((idref . CLM-00009)) claim 9)  wherein the rights package includes a decryption key.))
#+end_quote
#+begin_quote
[00012]
((div ((class . claim-text)) 12. The content server of  (claim-ref ((idref . CLM-00010)) claim 10)  wherein the rights package includes a decryption key.))
#+end_quote
#+begin_quote
[00013]
((div ((class . claim-text)) 13. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the digital content includes text-based information.))
#+end_quote
#+begin_quote
[00014]
((div ((class . claim-text)) 14. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the digital content includes audio information.))
#+end_quote
#+begin_quote
[00015]
((div ((class . claim-text)) 15. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the digital content include visual information.))
#+end_quote
#+begin_quote
[00016]
((div ((class . claim-text)) 16. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the digital content includes audio and visual information.))
#+end_quote
#+begin_quote
[00017]
((div ((class . claim-text)) 17. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the step of transmitting the digital content includes the step of transmitting the digital content as streaming media.))
#+end_quote
#+begin_quote
[00018]
((div ((class . claim-text)) 18. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the DRM packager is configured, in response to a request from a client to receive the digital content in conformance with a first of the plurality of different DRM implementations, to distribute the digital content together with the universal DRM layer added to the digital content.))
#+end_quote
#+begin_quote
[00019]
((div ((class . claim-text)) 19. A content server for storing and distributing digital content, comprising:
 (div ((class . claim-text)) a processor;) (div ((class . claim-text)) a content database configured to electronically store the digital content; and) (div ((class . claim-text)) a DRM packager, implemented at least in part in said processor, for distributing to a client the digital content from said content database in conformance with a universal DRM implementation that can access digital content in conformance with a plurality of different DRM implementations,) (div ((class . claim-text)) wherein said DRM packager is configured to encrypt the digital content, to tamper-proof or watermark the digital content, and to distribute the digital content.)))
#+end_quote
#+begin_quote
[00020]
((div ((class . claim-text)) 20. The content server of  (claim-ref ((idref . CLM-00019)) claim 19) , wherein the DRM packager bundles a rights package with the digital content prior to transmitting the digital content to the client, and wherein the rights package includes a decryption key for decrypting the digital content.))
#+end_quote

* [2021-01-19 Tue]
#+BEGIN_SRC emacs-lisp :results raw
  (load-file "./gp-util.el")
  (require 'gp-util)
  (require 'dom)
  (setq patent-number "US8683200B2")

  (defun claim-text-renderer (dom)
    "Receive claims as a dom and render it as text."
      (format "#+begin_quote\n%s\n#+end_quote"
	      (nreverse (claim-text-renderer-1 dom nil))
      ))


  (defun claims-renderer-1 (dom result)
    (append
     (cl-reduce 

      (lambda (acc object) 
	(cond 
	 ((and (listp object) (symbolp (car object)))
	  (cond 
	   ( (eq (car object) 'h2) (cons (format "** %s\n"  (dom-texts object)) acc) )	 
	   ( (eq (car object) 'heading) (cons (format "*** %s\n" (nth 2 object)) acc) )
	   ( (eq (car object) 'claim-statement) (cons (format "%s\n" (nth 2 object)) acc) )	 
	   ( (and (eq (car object) 'div) (eq (car (car (car (cdr object)))) 'id ))
	     (cons (format "%s\n" (claim-text-renderer object)) acc) )
	   ( t (claims-renderer-1 object acc ))
	   ( t acc)
	   ))
	 (t acc)))

      dom :initial-value nil
      ) ;; cl-reduce
     result) ;;append
    );; defun


  (defun claims-renderer (dom)
    (mapconcat 'identity (nreverse (claims-renderer-1 dom nil)) ""))

  ;(claims-renderer (gp-get-claims patent-number))
;; domはcl-reduceに渡される．そのとき各要素nodeがdomとして処理できるように，domを含むリストでなければならない  
  (defun claim-text-renderer-1 (dom result)
    (append (cl-reduce (lambda (acc node)
			 (cond 
			       ((string= (dom-attr node 'class) "claim") (claim-text-renderer-1 (cddr node) acc))
			       ((string= (dom-attr node 'class) "claim-text") 
			       (progn (cons (dom-text node) acc) 
			       (when (dom-non-text-children node) (claim-text-renderer-1 (dom-non-text-children node) acc ))))
			       (t acc))
				)
		       dom :initial-value nil
		       )
	    result))

  (setq cc-list
   '((div ((id . "CLM-00001") (num . "00001") (class . "claim"))
    (div ((class . "claim-text")) "1. A content server for storing and distributing digital content, comprising:"
    (div ((class . "claim-text")) "a processor;")
    (div ((class . "claim-text")) "a content database configured to electronically store the digital content; and") 
    (div ((class . "claim-text")) "a DRM packager, implemented at least in part in said processor, for adding a universal DRM layer to the digital content stored at said content database, wherein said universal DRM layer is able to access digital content in conformance with a plurality of different DRM implementations, said digital content being in conformance with one of said plurality of different DRM implementations.")))))

(claim-text-renderer-1 cc-list nil)
;(dom-attr cc-list 'class)
#+END_SRC

#+RESULTS:


#+BEGIN_SRC emacs-lisp
(require 'dom)
(dom-non-text-children '(div ((class . "claim-text")) "1. A content server for storing and distributing digital content, comprising:" (class . claim)))
#+END_SRC

#+RESULTS:
: ((class . claim))





(section 
((itemprop . claims)) 
(h2 nil Claims ( (span ((itemprop . count)) 20) )) 

(div ((itemprop . content)) (div ((mxw-id . PCLM59642781) (lang . EN) (load-source . patent-office) (class . claims))
(claim-statement nil The invention claimed is:) 
(div ((class . claim)) 

 (div ((id . "CLM-00001") (num . "00001") (class . "claim"))
 (div ((class . "claim-text")) "1. A content server for storing and distributing digital content, comprising:"
 (div ((class . "claim-text")) "a processor;") 
 (div ((class . "claim-text")) "a content database configured to electronically store the digital content; and") 
 (div ((class . "claim-text")) "a DRM packager, implemented at least in part in said processor, for adding a universal DRM layer to the digital content stored at said content database, wherein said universal DRM layer is able to access digital content in conformance with a plurality of different DRM implementations, said digital content being in conformance with one of said plurality of different DRM implementations."))))

 (div ((class . claim-dependent)) (div ((id . CLM-00002) (num . 00002) (class . claim)) (div ((class . claim-text)) 2. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein said DRM packager is configured to encrypt the digital content based upon the universal DRM layer.))) (div ((class . claim-dependent)) (div ((id . CLM-00003) (num . 00003) (class . claim)) (div ((class . claim-text)) 3. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein said DRM packager is configured to tamper-proof or watermark the digital content.))) (div ((class . claim-dependent)) (div ((id . CLM-00004) (num . 00004) (class . claim)) (div ((class . claim-text)) 4. The content server of  (claim-ref ((idref . CLM-00002)) claim 2)  wherein said DRM packager is configured to tamper-proof or watermark the digital content.))) (div ((class . claim-dependent)) (div ((id . CLM-00005) (num . 00005) (class . claim)) (div ((class . claim-text)) 5. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the DRM packager distributes the digital content over a computer network.))) (div ((class . claim-dependent)) (div ((id . CLM-00006) (num . 00006) (class . claim)) (div ((class . claim-text)) 6. The content server of  (claim-ref ((idref . CLM-00005)) claim 5)  wherein said computer network is the Internet.))) (div ((class . claim-dependent)) (div ((id . CLM-00007) (num . 00007) (class . claim)) (div ((class . claim-text)) 7. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the content database and the DRM packager are in communication over a computer network.))) (div ((class . claim-dependent)) (div ((id . CLM-00008) (num . 00008) (class . claim)) (div ((class . claim-text)) 8. The content server of  (claim-ref ((idref . CLM-00007)) claim 7)  wherein said computer network is the Internet.))) (div ((class . claim-dependent)) (div ((id . CLM-00009) (num . 00009) (class . claim)) (div ((class . claim-text)) 9. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the DRM packager further distributes a rights package to the user.))) (div ((class . claim-dependent)) (div ((id . CLM-00010) (num . 00010) (class . claim)) (div ((class . claim-text)) 10. The content server of  (claim-ref ((idref . CLM-00009)) claim 9)  wherein the rights package is bundled with the digital content.))) (div ((class . claim-dependent)) (div ((id . CLM-00011) (num . 00011) (class . claim)) (div ((class . claim-text)) 11. The content server of  (claim-ref ((idref . CLM-00009)) claim 9)  wherein the rights package includes a decryption key.))) (div ((class . claim-dependent)) (div ((id . CLM-00012) (num . 00012) (class . claim)) (div ((class . claim-text)) 12. The content server of  (claim-ref ((idref . CLM-00010)) claim 10)  wherein the rights package includes a decryption key.))) (div ((class . claim-dependent)) (div ((id . CLM-00013) (num . 00013) (class . claim)) (div ((class . claim-text)) 13. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the digital content includes text-based information.))) (div ((class . claim-dependent)) (div ((id . CLM-00014) (num . 00014) (class . claim)) (div ((class . claim-text)) 14. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the digital content includes audio information.))) (div ((class . claim-dependent)) (div ((id . CLM-00015) (num . 00015) (class . claim)) (div ((class . claim-text)) 15. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the digital content include visual information.))) (div ((class . claim-dependent)) (div ((id . CLM-00016) (num . 00016) (class . claim)) (div ((class . claim-text)) 16. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the digital content includes audio and visual information.))) (div ((class . claim-dependent)) (div ((id . CLM-00017) (num . 00017) (class . claim)) (div ((class . claim-text)) 17. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the step of transmitting the digital content includes the step of transmitting the digital content as streaming media.))) (div ((class . claim-dependent)) (div ((id . CLM-00018) (num . 00018) (class . claim)) (div ((class . claim-text)) 18. The content server of  (claim-ref ((idref . CLM-00001)) claim 1)  wherein the DRM packager is configured, in response to a request from a client to receive the digital content in conformance with a first of the plurality of different DRM implementations, to distribute the digital content together with the universal DRM layer added to the digital content.))) (div ((class . claim)) (div ((id . CLM-00019) (num . 00019) (class . claim)) (div ((class . claim-text)) 19. A content server for storing and distributing digital content, comprising:
 (div ((class . "claim-text")) "a processor;") 
 (div ((class . "claim-text")) "a content database configured to electronically store the digital content; and") (div ((class . claim-text)) a DRM packager, implemented at least in part in said processor, for distributing to a client the digital content from said content database in conformance with a universal DRM implementation that can access digital content in conformance with a plurality of different DRM implementations,) (div ((class . claim-text)) wherein said DRM packager is configured to encrypt the digital content, to tamper-proof or watermark the digital content, and to distribute the digital content.)))) (div ((class . claim-dependent)) (div ((id . CLM-00020) (num . 00020) (class . claim)) (div ((class . claim-text)) 20. The content server of  (claim-ref ((idref . CLM-00019)) claim 19) , wherein the DRM packager bundles a rights package with the digital content prior to transmitting the digital content to the client, and wherein the rights package includes a decryption key for decrypting the digital content.))))))

